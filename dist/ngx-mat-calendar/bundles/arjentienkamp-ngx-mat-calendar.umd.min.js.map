{"version":3,"sources":["../../../projects/ngx-mat-calendar/src/lib/models/Views.ts","../../../projects/ngx-mat-calendar/src/lib/models/Times.ts","../../../projects/ngx-mat-calendar/src/lib/models/Directions.ts","../../../projects/ngx-mat-calendar/src/lib/services/formatting.service.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-day/event-render-day.component.html","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-day/event-render-day.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-month/event-render-month.component.html","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-month/event-render-month.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-week/event-render-week.component.html","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-week/event-render-week.component.ts","../../../projects/ngx-mat-calendar/src/lib/models/Colors.ts","../../../projects/ngx-mat-calendar/src/lib/models/CalendarEvent.ts","../../../projects/ngx-mat-calendar/src/lib/models/CalendarOptions.ts","../../../projects/ngx-mat-calendar/src/lib/components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component.html","../../../projects/ngx-mat-calendar/src/lib/components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-mat-calendar/src/lib/components/shared/base-view/base-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/models/CalendarDay.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-display/event-display.component.ts","../../../projects/ngx-mat-calendar/src/lib/pipes/all-day-event.pipe.ts","../../../projects/ngx-mat-calendar/src/lib/components/day-view/day-view.component.html","../../../projects/ngx-mat-calendar/src/lib/components/day-view/day-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/week-view/week-view.component.html","../../../projects/ngx-mat-calendar/src/lib/components/week-view/week-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/pipes/limit.pipe.ts","../../../projects/ngx-mat-calendar/src/lib/components/month-view/month-view.component.html","../../../projects/ngx-mat-calendar/src/lib/components/month-view/month-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/ngx-mat-calendar.component.html","../../../projects/ngx-mat-calendar/src/lib/ngx-mat-calendar.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/shared-components.module.ts","../../../projects/ngx-mat-calendar/src/lib/pipes/pipes.module.ts","../../../projects/ngx-mat-calendar/src/lib/components/day-view/day-view.module.ts","../../../projects/ngx-mat-calendar/src/lib/components/week-view/week-view.module.ts","../../../projects/ngx-mat-calendar/src/lib/components/month-view/month-view.module.ts","../../../projects/ngx-mat-calendar/src/lib/other/DateAdapter.ts","../../../projects/ngx-mat-calendar/src/lib/ngx-mat-calendar.module.ts"],"names":["Periods","MONTH","hoursOfDay","title","isEnd","daysOfWeek","PREVIOUS","FormattingService","prototype","getTime","date","format","isToday","getDayName","getDayNumber","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵtextInterpolate2","i0.ɵɵproperty","i0.ɵɵelement","i0.ɵɵstyleProp","i0.ɵɵclassProp","factory","ɵfac","providedIn","Injectable","EventRenderDayComponent","formattingService","this","ngOnInit","startTime","event","endTime","isSameDay","endsToday","i0","ɵɵdirectiveInject","selectors","inputs","decls","vars","consts","template","rf","ctx","Component","selector","templateUrl","styleUrls","Input","ctx_r0","isPastEvent","ɵɵpureFunction1","_c0","allDay","color","EventRenderMonthComponent","eventTooltip","getEventTooltip","isBefore","Date","location","colors","EventRenderWeekComponent","CalendarEvent","init","grey","grid","CalendarEventGrid","Object","assign","offsetTop","offsetLeft","width","durationOffset","eventsInGroup","eventGroups","CalendarOptions","pixelsPerMinute","dateFormat","timeFormat","renderComponent","day","week","month","calendarEventType","jumpToSpy","enableDatePickerButton","enableAddEventButton","enableViewToggle","enableKeyboardShortcutDialog","locale","compact","view","defineProperty","KeyboardShortcutDialogComponent","data","MAT_DIALOG_DATA","Inject","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","ar","next","done","push","value","error","__spread","arguments","length","concat","BaseViewComponent","eventClick","EventEmitter","changeToDayView","subscriptions$","Subscription","markerPosition","pixelsPerHour","selectedDate","events","_this","add","options$","pipe","tap","options","calculateMarkerPosition","getPixelsPerMinute","subscribe","selectedDate$","interval","createEventGroups","map","uuid","uuidv4","eventGroup","eventsNotAllDay","filter","x","getOverlappingEvents","overlapEvent","includes","setEventSizes","populateEvents","calculatePixelsOffsetForEvent","compareEvent","eventsDoOverlap","areIntervalsOverlapping","start","end","inclusive","isAlreadyInEventGroup","some","forEach","eventGroupEvents","_a","index","endOfDay","eventDurationFromStartTime","intervalToDuration","eventDurationFromMidnight","startOfDay","hours","minutes","offsetInMinutes","Math","abs","getHours","getMinutes","getCellHeight","time","now","onEventClick","emit","navigateToDayView","sortByTime","a","sortByAllDay","ngOnDestroy","unsubscribe","events$","outputs","encapsulation","Output","CalendarDay","eventCount","EventDisplayComponent","resolver","createRenderComponent","componentFactory","resolveComponentFactory","component","renderTarget","createComponent","instance","destroy","ComponentFactoryResolver","viewQuery","ViewContainerRef","ViewEncapsulation","None","ViewChild","read","static","AllDayEventPipe","transform","items","item","i0.ɵɵlistener","event_r5","i0.ɵɵtextInterpolate1","event_r10","ctx_r4","pure","Pipe","name","DayViewComponent","_super","dayView","generateView","emptyDay","generateDays","populateDayView","populatedDay","sort","features","ɵɵInheritDefinitionFeature","event_r9","day_r7","event_r19","day_r14","WeekViewComponent","weekView","emptyDays","populateWeekView","populatedDays","days","selectedWeekStart","startOfWeek","weekStartsOn","LimitPipe","limit","slice","event_r22","ctx_r21","hiddenEventsDay","MonthViewComponent","setCalendarOffset","monthView","dayBlockHeight","weekNumbers","showHiddenEvents","maxEventsVisible","scrollListener","Subject","scrollListener$","asObservable","fromEvent","window","takeUntil","throttle","handleScroll","onResize","calculateMaxEventsPerDay","listenToCalendarViewportChanges","closeHiddenEvents","observer","MutationObserver","list","observe","calendarDayElement","nativeElement","childList","populateMonthView","getWeekNumbers","weeksOfMonth","eachWeekOfInterval","startOfMonth","endOfMonth","getWeek","dayOfWeek","getDay","selectedMonthStart","sub","isCurrentMonth","isSameMonth","deltaY","toggleHiddenEvents","hiddenEventsTriggerOrigin","getHiddenEventsHeight","children","getBoundingClientRect","height","floor","disconnect","ctx_r6","$event","ɵɵrestoreView","_r18_1","ɵɵnextContext","ctx_r7","_r21_1","ctx_r8","stopPropagation","ElementRef","ɵɵresolveWindow","HostListener","NgxMatCalendarComponent","dateAdapter","dialog","dateChange","addButtonClick","calendar","today","onKeyDown","handleKeyboardEvents","selectedView","initCalendar","parseDates","setLocale","generateCalendar","monthAndYear","weeknumber","setCalendarToday","handleCalendarSet","direction","offset","setCalendar","onViewChange","getSelectedView","onAddButtonClick","onDatePickerChange","toDate","datePickerMenu","closeMenu","showKeyboardShortcutDialog","open","key","i1","DateAdapter","i2$1","MatDialog","MatMenuTrigger","MaterialModules","MatIconModule","MatTooltipModule","SharedComponentsModule","imports","BrowserModule","declarations","exports","NgModule","providers","bootstrap","PipesModule","DayViewModule","entryComponents","WeekViewModule","MonthViewModule","OverlayModule","LocaleDateAdapter","getFirstDayOfWeek","NativeDateAdapter","MatCardModule","MatButtonModule","MatNativeDateModule","MatFormFieldModule","MatInputModule","MatDatepickerModule","MatSelectModule","MatMenuModule","MatDialogModule","MatDividerModule","ViewModules","NgxMatCalendarModule","provide","MAT_MOMENT_DATE_ADAPTER_OPTIONS","useValue","useUtc","useClass","FormsModule","ReactiveFormsModule"],"mappings":"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","sourcesContent":["export const DAY = 'day';\nexport const WEEK = 'week';\nexport const MONTH = 'month';\n\nexport type Views = typeof DAY | typeof WEEK | typeof MONTH;\n","export const hoursOfDay = [\n    { title: '00:00' },\n    { title: '01:00' },\n    { title: '02:00' },\n    { title: '03:00' },\n    { title: '04:00' },\n    { title: '05:00' },\n    { title: '06:00' },\n    { title: '07:00' },\n    { title: '08:00' },\n    { title: '09:00' },\n    { title: '10:00' },\n    { title: '11:00' },\n    { title: '12:00' },\n    { title: '13:00' },\n    { title: '14:00' },\n    { title: '15:00' },\n    { title: '16:00' },\n    { title: '17:00' },\n    { title: '18:00' },\n    { title: '19:00' },\n    { title: '20:00' },\n    { title: '21:00' },\n    { title: '22:00' },\n    { title: '23:00' },\n    { title: '00:00', isEnd: true }\n];\n\nexport const daysOfWeek = [\n    { title: 'Mon' },\n    { title: 'Tue' },\n    { title: 'Wed' },\n    { title: 'Thu' },\n    { title: 'Fri' },\n    { title: 'Sat' },\n    { title: 'Sun' }\n];\n\nexport enum Periods {\n    day = 'days',\n    week = 'weeks',\n    month = 'months'\n}\n","export const PREVIOUS = 'prev';\nexport const NEXT = 'next';\n\nexport type Views = typeof PREVIOUS | typeof NEXT;\n","import { Injectable } from '@angular/core';\nimport { format, isToday } from 'date-fns';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormattingService {\n    public getTime(date: Date): string {\n        return format(date, 'HH:mm');\n    }\n\n    public isToday(date: Date): boolean {\n        return isToday(date);\n    }\n\n    public getDayName(date: Date): string {\n        return format(date, 'E');\n    }\n\n    public getDayNumber(date: Date): string {\n        return format(date, 'd');\n    }\n}\n","<div *ngIf=\"event\" class=\"event\" [class.all-day]=\"event.allDay\" [style.backgroundColor]=\"event.color\">\n    <div *ngIf=\"!event.allDay\">\n        <div class=\"event__header\">\n            <p>{{ event.title }}</p>\n        </div>\n\n        <div class=\"event__metadata\">\n            <p>{{ startTime }} - {{ endTime }}</p>\n\n            <div class=\"event__location\" *ngIf=\"event.location\">\n                <mat-icon>place</mat-icon>\n                <span>{{ event.location }}</span>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"event.allDay\">\n        <div class=\"event__header\">\n            <p class=\"title\">{{ event.title }}</p>\n        </div>\n    </div>\n\n    <div class=\"event__multiday\" *ngIf=\"!isSameDay && !endsToday\"></div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { isSameDay } from 'date-fns';\nimport { CalendarEvent } from '../../../../models/CalendarEvent';\nimport { FormattingService } from '../../../../services/formatting.service';\n\n@Component({\n    selector: 'event-render-day',\n    templateUrl: './event-render-day.component.html',\n    styleUrls: ['./event-render-day.component.scss']\n})\nexport class EventRenderDayComponent implements OnInit {\n    @Input() event: CalendarEvent;\n    @Input() date: Date;\n\n    startTime: string;\n    endTime: string;\n    isSameDay: boolean;\n    endsToday: boolean;\n\n    constructor(\n        public formattingService: FormattingService,\n    ) {}\n\n    ngOnInit(): void {\n        this.startTime = this.formattingService.getTime(this.event.startTime);\n        this.endTime = this.formattingService.getTime(this.event.endTime);\n        this.isSameDay = isSameDay(this.event.startTime, this.event.endTime);\n        this.endsToday = isSameDay(this.date, this.event.endTime);\n    }\n}\n","<div *ngIf=\"event\" class=\"event\">\n    <div\n        class=\"even__line\"\n        [matTooltip]=\"eventTooltip\"\n        [ngStyle]=\"{'backgroundColor' : event.allDay ? event.color : '' }\"\n        [class.all-day]=\"event.allDay\"\n        [class.past-event]=\"isPastEvent()\">\n        <span class=\"event-color\" *ngIf=\"!event.allDay\" [style.backgroundColor]=\"event.color\"></span>\n        <p class=\"metadata\" *ngIf=\"!event.allDay\">{{ startTime }}</p>\n        <p class=\"title\">{{ event.title }}</p>\n    </div>\n\n    <div class=\"event__multiday\" *ngIf=\"!isSameDay && !endsToday\"></div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { isBefore, isSameDay } from 'date-fns';\nimport { CalendarEvent } from '../../../../models/CalendarEvent';\nimport { FormattingService } from '../../../../services/formatting.service';\n\n@Component({\n    selector: 'event-render-month',\n    templateUrl: './event-render-month.component.html',\n    styleUrls: ['./event-render-month.component.scss']\n})\nexport class EventRenderMonthComponent implements OnInit {\n    @Input() event: CalendarEvent;\n    @Input() date: Date;\n\n    startTime: string;\n    endTime: string;\n    isSameDay: boolean;\n    endsToday: boolean;\n    eventTooltip: string;\n\n    constructor(\n        public formattingService: FormattingService,\n    ) {}\n\n    ngOnInit(): void {\n        this.startTime = this.formattingService.getTime(this.event.startTime);\n        this.endTime = this.formattingService.getTime(this.event.endTime);\n        this.isSameDay = isSameDay(this.event.startTime, this.event.endTime);\n        this.endsToday = isSameDay(this.date, this.event.endTime);\n\n        this.eventTooltip = this.getEventTooltip();\n    }\n\n    isPastEvent(): boolean {\n        return isBefore(this.event.date, new Date());\n    }\n\n    getEventTooltip(): string {\n        if (this.event.location) {\n            return `${this.event.title} (${this.startTime} - ${this.endTime}) @ ${this.event.location}`;\n        }\n\n        return `${this.event.title} (${this.startTime} - ${this.endTime})`;\n    }\n}\n","<div *ngIf=\"event\" class=\"event\" [class.all-day]=\"event.allDay\" [style.backgroundColor]=\"event.color\">\n    <div *ngIf=\"!event.allDay\">\n        <div class=\"event__header\">\n            <p>{{ event.title }}</p>\n        </div>\n\n        <div class=\"event__metadata\">\n            <p>{{ startTime }} - {{ endTime }}</p>\n\n            <div class=\"event__location\" *ngIf=\"event.location\">\n                <mat-icon>place</mat-icon>\n                <span>{{ event.location }}</span>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"event.allDay\">\n        <div class=\"event__header\">\n            <p class=\"title\">{{ event.title }}</p>\n        </div>\n    </div>\n\n    <div class=\"event__multiday\" *ngIf=\"!isSameDay && !endsToday\"></div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { isSameDay } from 'date-fns';\nimport { CalendarEvent } from '../../../../models/CalendarEvent';\nimport { FormattingService } from '../../../../services/formatting.service';\n\n@Component({\n    selector: 'event-render-week',\n    templateUrl: './event-render-week.component.html',\n    styleUrls: ['./event-render-week.component.scss']\n})\nexport class EventRenderWeekComponent implements OnInit {\n    @Input() event: CalendarEvent;\n    @Input() date: Date;\n\n    startTime: string;\n    endTime: string;\n    isSameDay: boolean;\n    endsToday: boolean;\n\n    constructor(\n        public formattingService: FormattingService,\n    ) {}\n\n    ngOnInit(): void {\n        this.startTime = this.formattingService.getTime(this.event.startTime);\n        this.endTime = this.formattingService.getTime(this.event.endTime);\n        this.isSameDay = isSameDay(this.event.startTime, this.event.endTime);\n        this.endsToday = isSameDay(this.date, this.event.endTime);\n    }\n}\n","export enum colors {\n    grey = '#cfd8dc',\n    blue = '#b3e5fc',\n    pink = '#ffc1e3',\n    green = '#c8e6c9'\n}\n","import { colors } from './Colors';\n\nexport class CalendarEvent {\n    title = '';\n    date: Date;\n    startTime: Date;\n    endTime: Date;\n    allDay?: boolean = false;\n\n    color?: any = colors.grey;\n    grid?: CalendarEventGrid = new CalendarEventGrid();\n    location?: string;\n\n    constructor(init?: Partial<CalendarEvent>) {\n        Object.assign(this, init);\n    }\n}\n\nexport class CalendarEventGrid {\n    offsetTop = 0;\n    offsetLeft = 0;\n    width = 100;\n    durationOffset = 0;\n    eventsInGroup = 0;\n    eventGroups: string[] = [];\n}\n","import { EventRenderDayComponent } from '../components/shared/event-render/event-render-day/event-render-day.component';\nimport { EventRenderMonthComponent } from '../components/shared/event-render/event-render-month/event-render-month.component';\nimport { EventRenderWeekComponent } from '../components/shared/event-render/event-render-week/event-render-week.component';\nimport { CalendarEvent } from './CalendarEvent';\nimport { MONTH, Views } from './Views';\n\nexport class CalendarOptions {\n    pixelsPerMinute = 1.3;\n    dateFormat = 'DD-MM-YYYY';\n    timeFormat = 'HH:mm';\n    renderComponent = {\n        day: EventRenderDayComponent,\n        week: EventRenderWeekComponent,\n        month: EventRenderMonthComponent\n    };\n    calendarEventType = typeof CalendarEvent;\n    jumpToSpy = true;\n    enableDatePickerButton = true;\n    enableAddEventButton = true;\n    enableViewToggle = true;\n    enableKeyboardShortcutDialog = true;\n    locale = 'nl';\n    compact = false;\n    view: Views = MONTH;\n\n    constructor(init?: Partial<CalendarOptions>) {\n        Object.assign(this, init);\n    }\n\n    get getPixelsPerMinute(): number {\n        if (this.compact) {\n            return this.pixelsPerMinute / 2;\n        }\n\n        return this.pixelsPerMinute;\n    }\n}\n","<h2 mat-dialog-title>Keyboard Shortcuts</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <mat-divider></mat-divider>\n\n    <div class=\"content-row\">\n        <span>Switch to day view</span>\n        <span>\n            <span class=\"keyboard-shortcut\">d</span>\n        </span>\n    </div>\n\n    <div class=\"content-row\">\n        <span>Switch to week view</span>\n        <span>\n            <span class=\"keyboard-shortcut\">w</span>\n        </span>        \n    </div>\n\n    <div class=\"content-row\">\n        <span>Switch to month view</span>\n        <span>\n            <span class=\"keyboard-shortcut\">m</span>\n        </span>\n    </div>\n\n    <div class=\"content-row\">\n        <span>Go to today</span>\n        <span>\n            <span class=\"keyboard-shortcut\">t</span>\n        </span>\n    </div>\n\n    <div class=\"content-row\" *ngIf=\"data.enableAddEventButton\">\n        <span>Add event</span>\n        <span>\n            <span class=\"keyboard-shortcut\">n</span>\n        </span>\n    </div>\n</mat-dialog-content>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CalendarOptions } from '../../../models/CalendarOptions';\n\n@Component({\n    selector: 'keyboard-shortcut-dialog',\n    templateUrl: './keyboard-shortcut-dialog.component.html',\n    styleUrls: ['./keyboard-shortcut-dialog.component.scss']\n})\nexport class KeyboardShortcutDialogComponent implements OnInit {\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: CalendarOptions\n    ) { }\n\n    ngOnInit(): void { }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { areIntervalsOverlapping, endOfDay, getHours, getMinutes, intervalToDuration, isSameDay, startOfDay } from 'date-fns';\nimport { CalendarDay } from '../../../models/CalendarDay';\nimport { CalendarEvent, CalendarEventGrid } from '../../../models/CalendarEvent';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CalendarOptions } from '../../../models/CalendarOptions';\nimport { hoursOfDay } from '../../../models/Times';\nimport { FormattingService } from '../../../services/formatting.service';\nimport { interval, Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/internal/operators/tap';\n\n@Component({\n    template: ''\n})\nexport abstract class BaseViewComponent implements OnInit, OnDestroy {\n    @Input() options$: Observable<CalendarOptions>;\n    @Input() selectedDate$: Observable<Date>;\n    @Input() events$: Observable<CalendarEvent[]>;\n\n    @Output() eventClick: EventEmitter<CalendarEvent> = new EventEmitter();\n    @Output() changeToDayView: EventEmitter<Date> = new EventEmitter();\n\n    protected subscriptions$: Subscription = new Subscription();\n    public markerPosition = 0;\n\n    options: CalendarOptions;\n    hoursOfDay = hoursOfDay;\n    pixelsPerHour = 0;\n    selectedDate = new Date();\n    events: CalendarEvent[] = [];\n\n    protected constructor(\n        protected formattingService: FormattingService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.subscriptions$.add(\n            this.options$.pipe(\n                tap((options) => {\n                    this.options = options;\n                    this.markerPosition = this.calculateMarkerPosition();\n                    this.pixelsPerHour = this.options.getPixelsPerMinute * 60;\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.selectedDate$.pipe(\n                tap(selectedDate => {\n                    this.selectedDate = selectedDate;\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            interval(60000).pipe(\n                tap(() => {\n                    this.markerPosition = this.calculateMarkerPosition();\n                })\n            ).subscribe()\n        );\n    }\n\n    protected createEventGroups(day: CalendarDay): CalendarDay {\n        day.events.map((event: CalendarEvent) => {\n            const uuid = uuidv4();\n            let eventGroup: CalendarEvent[] = [];\n\n            if (event.grid) {\n                const eventsNotAllDay = day.events.filter(x => !x.allDay);\n                eventGroup = this.getOverlappingEvents(event, eventsNotAllDay, event.grid.eventGroups);\n\n                eventGroup.map((overlapEvent: CalendarEvent) => {\n                    if (overlapEvent.grid) {\n                        overlapEvent.grid.eventGroups.push(uuid);\n                        overlapEvent.grid.eventsInGroup = eventGroup.length;\n                    }\n\n                    if (!day.eventGroups.includes(uuid)) {\n                        day.eventGroups.push(uuid);\n                    }\n                });\n            }\n        });\n\n        this.setEventSizes(day);\n\n        return day;\n    }\n\n    protected populateEvents(event: CalendarEvent, day: CalendarDay): CalendarEvent {\n        const populatedEvent = new CalendarEvent({\n            ...event,\n            grid: this.calculatePixelsOffsetForEvent(event, day)\n        });\n\n        return populatedEvent;\n    }\n\n    private getOverlappingEvents(event: CalendarEvent, events: CalendarEvent[], eventGroups: string[]): CalendarEvent[] {\n        return events.filter((compareEvent: CalendarEvent) => {\n            const eventsDoOverlap = areIntervalsOverlapping(\n                { start: event.startTime, end: event.endTime },\n                { start: compareEvent.startTime, end: compareEvent.endTime },\n                { inclusive: true }\n            );\n\n            let isAlreadyInEventGroup = false;\n            if (compareEvent.grid) {\n                isAlreadyInEventGroup = compareEvent.grid.eventGroups.some((eventGroup: string) => {\n                    return eventGroups.includes(eventGroup);\n                });\n            }\n\n            return eventsDoOverlap && !isAlreadyInEventGroup;\n        });\n    }\n\n    private setEventSizes(day: CalendarDay): void {\n        day.eventGroups.forEach(eventGroup => {\n            const eventGroupEvents = day.events.filter((event: CalendarEvent) => {\n                return event.grid?.eventGroups.includes(eventGroup);\n            });\n\n            let index = 0;\n            eventGroupEvents.forEach((event: CalendarEvent) => {\n                if (event.grid) {\n                    event.grid.width = 100 / (eventGroupEvents.length);\n                    event.grid.offsetLeft = event.grid.width * index;\n                }\n\n                // check if already has a width/offsetLeft to determine if it's in eventgroup A or B\n\n                index++;\n            });\n        });\n    }\n\n    private calculatePixelsOffsetForEvent(event: CalendarEvent, day: CalendarDay): CalendarEventGrid {\n        let grid = new CalendarEventGrid();\n\n        const startTime = event.startTime;\n        const endTime = isSameDay(event.startTime, event.endTime) ?\n            event.endTime :\n            endOfDay(event.startTime);\n\n        const eventDurationFromStartTime = intervalToDuration({\n            start: startTime,\n            end: endTime\n        });\n\n        const eventDurationFromMidnight = intervalToDuration({\n            start: startOfDay(day.date),\n            end: event.endTime\n        });\n\n        eventDurationFromStartTime.hours = eventDurationFromStartTime.hours || 0;\n        eventDurationFromStartTime.minutes = eventDurationFromStartTime.minutes || 0;\n        eventDurationFromMidnight.hours = eventDurationFromMidnight.hours || 0;\n        eventDurationFromMidnight.minutes = eventDurationFromMidnight.minutes || 0;\n\n        const offsetInMinutes = !isSameDay(event.startTime, event.endTime) && isSameDay(event.endTime, day.date) ?\n            0 : Math.abs(getHours(startTime)) * 60 + getMinutes(startTime);\n\n        const durationOffset = !isSameDay(event.startTime, event.endTime) && isSameDay(event.endTime, day.date) ?\n            eventDurationFromMidnight.hours * 60 + eventDurationFromMidnight.minutes :\n            eventDurationFromStartTime.hours * 60 + eventDurationFromStartTime.minutes;\n\n        grid = {\n            ...grid,\n            offsetTop: offsetInMinutes * this.options.getPixelsPerMinute,\n            durationOffset: durationOffset * this.options.getPixelsPerMinute\n        };\n\n        return grid;\n    }\n\n    public getCellHeight(time: any): number {\n        if (time.isEnd) {\n            return 20;\n        }\n\n        return this.pixelsPerHour;\n    }\n\n    protected calculateMarkerPosition(): number {\n        const now = new Date();\n        const offsetTop = (getHours(now) * 60 + getMinutes(now)) * this.options.getPixelsPerMinute;\n\n        return offsetTop;\n    }\n\n    public isToday(date: Date): boolean {\n        return this.formattingService.isToday(date);\n    }\n\n    public getDayName(date: Date): string {\n        return this.formattingService.getDayName(date);\n    }\n\n    public getDayNumber(date: Date): string {\n        return this.formattingService.getDayNumber(date);\n    }\n\n    public getTime(date: Date): string {\n        return this.formattingService.getTime(date);\n    }\n\n    public onEventClick(event: CalendarEvent): void {\n        this.eventClick.emit(event);\n    }\n\n    public navigateToDayView(date: Date): void {\n        this.changeToDayView.emit(date);\n    }\n\n    protected sortByTime(a: CalendarEvent, b: CalendarEvent): number {\n        return a.startTime.getTime() - b.startTime.getTime();\n    }\n\n    protected sortByAllDay(event: CalendarEvent): number {\n        return event.allDay ? -1 : 1;\n    }\n\n    protected isSameDay(date: Date, startTime: Date, endTime: Date): boolean {\n        return isSameDay(new Date(date), new Date(startTime)) || isSameDay(new Date(date), new Date(endTime));\n    }\n\n    ngOnDestroy(): void {\n       this.subscriptions$.unsubscribe();\n    }\n}\n","import { CalendarEvent } from './CalendarEvent';\n\nexport class CalendarDay {\n    date: Date = new Date();\n    eventGroups: string[] = [];\n    events: CalendarEvent[] = [];\n    eventCount: number = 0;\n\n    constructor(init?: Partial<CalendarDay>) {\n        Object.assign(this, init);\n    }\n}\n","import { Component, ComponentFactoryResolver, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { CalendarEvent } from '../../../models/CalendarEvent';\n\n@Component({\n    selector: 'event-display',\n    template: `<ng-template #renderTarget></ng-template>`,\n    styleUrls: ['./event-display.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class EventDisplayComponent implements OnInit, OnDestroy {\n    renderComponent: any;\n    @Input() event!: CalendarEvent;\n    @Input() date!: Date;\n    @Input() component!: any;\n\n    @ViewChild('renderTarget', { read: ViewContainerRef, static: true }) renderTarget: any;\n\n    constructor(\n        private resolver: ComponentFactoryResolver\n    ) {}\n\n    ngOnInit(): void {\n        if (this.event && !this.renderComponent) {\n            this.createRenderComponent();\n        }\n    }\n\n    createRenderComponent(): void {\n        const componentFactory = this.resolver.resolveComponentFactory(this.component);\n        this.renderComponent = this.renderTarget.createComponent(componentFactory);\n        this.renderComponent.instance.event = this.event;\n        this.renderComponent.instance.date = this.date;\n    }\n\n    ngOnDestroy(): void {\n        if (this.renderComponent) {\n            this.renderComponent.destroy();\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'allDayEventPipe'\n})\nexport class AllDayEventPipe implements PipeTransform {\n    transform(items: any[], allDay: boolean): any {\n        if (allDay) {\n            return items.filter(item => item.allDay);\n        }\n\n        return items.filter(item => !item.allDay);\n    }\n}\n","<div class=\"calendar__days\">\n    <div class=\"calendar__day\">\n        <div class=\"day__header\" [ngClass]=\"{ 'day__header--today ': isToday(selectedDate) }\">\n            <span class=\"day-name\">{{ getDayName(selectedDate) }}</span> \n            <span class=\"day-number\">{{ getDayNumber(selectedDate) }}</span>\n        </div>\n    </div>\n</div> \n\n<div class=\"calendar__content\">\n    <div class=\"calendar__day-events\">\n        <div class=\"day__lane\">\n            <event-display\n                *ngFor=\"let event of dayView.events | allDayEventPipe: true\"\n                class=\"calendar__item\"\n                [component]=\"options.renderComponent.day\"\n                [event]=\"event\"\n                [date]=\"selectedDate\"\n                (click)=\"onEventClick(event)\">\n            </event-display>\n        </div>\n    </div>\n\n    <div class=\"calendar__lanes\">\n        <div class=\"calendar__times\">\n            <div class=\"time-cell\" *ngFor=\"let hour of hoursOfDay;\" [style.height.px]=\"getCellHeight(hour)\">\n                {{ hour.title }}\n            </div>\n        </div>\n\n        <div class=\"day__lane\" [ngClass]=\"{ 'day__lane--today': isToday(selectedDate) }\">\n            <div class=\"time-grid\">\n                <div class=\"time-grid__cell\" *ngFor=\"let hour of hoursOfDay;\" [style.height.px]=\"getCellHeight(hour)\"></div>\n            </div> \n\n            <div class=\"calendar__marker\" *ngIf=\"isToday(selectedDate)\" [style.marginTop.px]=\"markerPosition\"></div>\n            \n            <event-display\n                *ngFor=\"let event of dayView.events | allDayEventPipe: false\"\n                class=\"calendar__item\"\n                [component]=\"options.renderComponent.day\"\n                [event]=\"event\"\n                [date]=\"selectedDate\"                \n                [style.width.%]=\"event.grid?.width\"\n                [style.marginLeft.%]=\"event.grid?.offsetLeft\"\n                [style.marginTop.px]=\"event.grid?.offsetTop\"\n                [style.height.px]=\"event.grid?.durationOffset\"\n                (click)=\"onEventClick(event)\">\n            </event-display>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BaseViewComponent } from '../shared/base-view/base-view.component';\nimport { DayView } from '../../models/Calendar';\nimport { CalendarEvent } from '../../models/CalendarEvent';\nimport { FormattingService } from '../../services/formatting.service';\nimport { tap } from 'rxjs/operators';\nimport { CalendarDay } from '../../models/CalendarDay';\n\n@Component({\n    selector: 'day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseViewComponent implements OnInit {\n    dayView = {} as DayView;\n\n    constructor(\n        formattingService: FormattingService\n    ) {\n        super(formattingService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.generateView();\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap(events => {\n                    this.events = events;\n                    this.generateView();\n                })\n            ).subscribe()\n        );\n    }\n\n    generateView(): void {\n        if (this.selectedDate) {\n            const emptyDay = this.generateDays();\n            this.populateDayView(emptyDay);\n        }\n    }\n\n    populateDayView(emptyDay: CalendarDay): void {\n        const populatedDay: CalendarDay = emptyDay;\n\n        const events = this.events.filter((event: CalendarEvent) => {\n            return this.isSameDay(populatedDay.date, event.startTime, event.endTime);\n            }).map((event: CalendarEvent) => {\n                return this.populateEvents(event, populatedDay);\n            }).sort((a: CalendarEvent, b: CalendarEvent) => {\n                return this.sortByTime(a, b);\n            });\n\n        populatedDay.events = events;\n\n        this.dayView = this.createEventGroups(populatedDay);\n    }\n\n    generateDays(): CalendarDay {\n        const date = new Date(this.selectedDate);\n\n        const day: CalendarDay = new CalendarDay({\n            date,\n            eventGroups: [],\n            events: [],\n            eventCount: 0\n        });\n\n        return day;\n    }\n}\n","<div class=\"calendar__days\">\n    <div class=\"calendar__day\" *ngFor=\"let day of weekView.days;\">\n        <div class=\"day__header\" [ngClass]=\"{ 'day__header--today ': isToday(day.date) }\">\n            <span class=\"day-name\">{{ getDayName(day.date) }}</span> \n            <span class=\"day-number\" (click)=\"navigateToDayView(day.date)\">{{ getDayNumber(day.date) }}</span>\n        </div>\n    </div>\n</div> \n\n<div class=\"calendar__content\">\n    <div class=\"calendar__day-events\">\n        <div class=\"day__lane\" *ngFor=\"let day of weekView.days\">\n            <event-display\n                *ngFor=\"let event of day.events | allDayEventPipe: true\"\n                class=\"calendar__item\"\n                [component]=\"options.renderComponent.week\"\n                [event]=\"event\"\n                [date]=\"day.date\"\n                (click)=\"onEventClick(event)\">\n            </event-display>\n        </div>\n    </div>\n\n    <div class=\"calendar__lanes\">\n        <div class=\"calendar__times\">\n            <div class=\"time-cell\" *ngFor=\"let hour of hoursOfDay;\" [style.height.px]=\"getCellHeight(hour)\">\n                {{ hour.title }}\n            </div>\n        </div>\n\n        <div class=\"day__lane\"\n            *ngFor=\"let day of weekView.days\"\n            [ngClass]=\"{ 'day__lane--today': isToday(day.date) }\">\n\n            <div class=\"time-grid\">\n                <div class=\"time-grid__cell\" *ngFor=\"let hour of hoursOfDay;\" [style.height.px]=\"getCellHeight(hour)\"></div>\n            </div> \n\n            <div class=\"calendar__marker\" *ngIf=\"isToday(day.date)\" [style.marginTop.px]=\"markerPosition\"></div>\n            \n            <event-display\n                *ngFor=\"let event of day.events | allDayEventPipe: false\"\n                class=\"calendar__item\"\n                [component]=\"options.renderComponent.week\"\n                [event]=\"event\"\n                [date]=\"day.date\"                \n                [style.width.%]=\"event.grid?.width\"\n                [style.marginLeft.%]=\"event.grid?.offsetLeft\"\n                [style.marginTop.px]=\"event.grid?.offsetTop\"\n                [style.height.px]=\"event.grid?.durationOffset\"\n                (click)=\"onEventClick(event)\">\n            </event-display>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { add, startOfWeek } from 'date-fns';\nimport { BaseViewComponent } from '../shared/base-view/base-view.component';\nimport { WeekView } from '../../models/Calendar';\nimport { CalendarEvent } from '../../models/CalendarEvent';\nimport { FormattingService } from '../../services/formatting.service';\nimport { tap } from 'rxjs/operators';\nimport { CalendarDay } from '../../models/CalendarDay';\n\n@Component({\n    selector: 'week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss']\n})\nexport class WeekViewComponent extends BaseViewComponent implements OnInit {\n    weekView = {} as WeekView;\n\n    constructor(\n        formattingService: FormattingService\n    ) {\n        super(formattingService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.generateView();\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap(events => {\n                    this.events = events;\n                    this.generateView();\n                })\n            ).subscribe()\n        );\n    }\n\n    generateView(): void {\n        if (this.selectedDate) {\n            const emptyDays = this.generateDays();\n            this.populateWeekView(emptyDays);\n        }\n    }\n\n    populateWeekView(emptyDays: CalendarDay[]): void {\n        const populatedDays: CalendarDay[] = emptyDays;\n\n        populatedDays.forEach(day => {\n            day.events = this.events.filter((event: CalendarEvent) => {\n                return this.isSameDay(day.date, event.startTime, event.endTime);\n            }).map((event: CalendarEvent) => {\n                return this.populateEvents(event, day);\n            }).sort((a: CalendarEvent, b: CalendarEvent) => {\n                return this.sortByTime(a, b);\n            });\n\n            day = this.createEventGroups(day);\n        });\n\n        this.weekView.days = populatedDays;\n    }\n\n    generateDays(): CalendarDay[] {\n        const selectedWeekStart = startOfWeek(this.selectedDate, { weekStartsOn: 1 });\n        const days = [];\n\n        for (let i = 0; i < 7; i++) {\n            let date = new Date(selectedWeekStart);\n            date = add(date, { days: i });\n\n            const day = new CalendarDay({\n                date,\n                eventGroups: [],\n                events: []\n            });\n\n            days.push(day);\n        }\n\n        return days;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'limitPipe'\n})\nexport class LimitPipe implements PipeTransform {\n    transform(items: any[], limit: number): any {\n        return items.slice(0, limit);\n    }\n}\n","<div class=\"calendar__days\">\n    <div class=\"calendar__day\" *ngFor=\"let day of daysOfWeek;\">\n        <div class=\"day__header\">\n            <span class=\"day-name\">{{ day.title }}</span>\n        </div>\n    </div>\n</div>\n\n<div class=\"calendar__weeknumbers\">\n    <div class=\"week-number-cell\" *ngFor=\"let weekNumber of weekNumbers;\">\n        {{ weekNumber }}\n    </div>\n</div>\n\n<div class=\"calendar__content\">\n    <div class=\"calendar__blocks\" #calendarDayElement>\n        <div \n            *ngFor=\"let day of monthView.days\" \n            class=\"day__block\"\n            [class.is-today]=\"isToday(day.date)\">\n            <div class=\"day__block-content\" [class.not-current-month]=\"!isCurrentMonth(day.date)\">\n                <span class=\"day__block-date\" (click)=\"navigateToDayView(day.date)\">{{ getDayNumber(day.date) }}</span>\n            </div>\n\n            <div class=\"day__events\">\n                <event-display\n                    *ngFor=\"let event of day.events | limitPipe: maxEventsVisible - 1\"\n                    class=\"calendar__item\"\n                    [component]=\"options.renderComponent.month\"\n                    [event]=\"event\"\n                    [date]=\"day.date\"      \n                    (click)=\"onEventClick(event)\">\n                </event-display>\n\n                <span *ngIf=\"day.eventCount && maxEventsVisible > 0 && day.eventCount >= maxEventsVisible\">\n                    <div\n                        class=\"hidden-events-trigger\"                        \n                        (click)=\"toggleHiddenEvents(trigger, day)\"\n                        cdkOverlayOrigin\n                        #trigger=\"cdkOverlayOrigin\">\n                        {{ day.eventCount - maxEventsVisible + 1 }} more\n                    </div>\n                </span>  \n            </div>\n        </div>\n\n        <ng-template\n            cdkConnectedOverlay\n            (overlayOutsideClick)=\"closeHiddenEvents()\"\n            [cdkConnectedOverlayOffsetY]=\"-100\"\n            [cdkConnectedOverlayOffsetX]=\"-35\"\n            cdkConnectedOverlayPanelClass=\"hidden-events-overlay\"\n            [cdkConnectedOverlayOrigin]=\"hiddenEventsTriggerOrigin\"\n            [cdkConnectedOverlayOpen]=\"showHiddenEvents\">\n            <div\n                class=\"event-container\"\n                [class.is-today]=\"isToday(hiddenEventsDay.date)\"\n                [style.height.px]=\"getHiddenEventsHeight()\">\n\n                <span\n                    class=\"event-container__date\"\n                    (click)=\"navigateToDayView(hiddenEventsDay.date)\">\n                    {{ getDayNumber(hiddenEventsDay.date) }}\n                </span>\n\n                <event-display\n                    *ngFor=\"let event of hiddenEventsDay.events\"\n                    class=\"calendar__item\"\n                    [component]=\"options.renderComponent.month\"\n                    [event]=\"event\"\n                    [date]=\"hiddenEventsDay.date\"      \n                    (click)=\"onEventClick(event)\">\n                </event-display>\n            </div>\n        </ng-template>          \n    </div>\n</div>\n","import {\n    Component, ElementRef, EventEmitter,\n    HostListener, OnDestroy, OnInit, Output, QueryList, ViewChild, ViewChildren\n} from '@angular/core';\nimport { add, eachWeekOfInterval, endOfMonth, getWeek, isSameMonth, startOfMonth, sub } from 'date-fns';\nimport { fromEvent, interval, Subject } from 'rxjs';\nimport { takeUntil, tap, throttle } from 'rxjs/operators';\nimport { MonthView } from '../../models/Calendar';\nimport { CalendarDay } from '../../models/CalendarDay';\nimport { CalendarEvent } from '../../models/CalendarEvent';\nimport { NEXT, PREVIOUS } from '../../models/Directions';\nimport { daysOfWeek } from '../../models/Times';\nimport { FormattingService } from '../../services/formatting.service';\nimport { BaseViewComponent } from '../shared/base-view/base-view.component';\n\n@Component({\n    selector: 'month-view',\n    templateUrl: './month-view.component.html',\n    styleUrls: ['./month-view.component.scss']\n})\nexport class MonthViewComponent extends BaseViewComponent implements OnInit, OnDestroy {\n    @Output() setCalendarOffset: EventEmitter<string> = new EventEmitter();\n\n    monthView = {} as MonthView;\n    daysOfWeek = daysOfWeek;\n    dayBlockHeight = 0;\n    weekNumbers: number[] = [];\n    showHiddenEvents = false;\n    hiddenEventsTriggerOrigin: any;\n    hiddenEventsDay: CalendarDay;\n    maxEventsVisible = 0;\n    observer: MutationObserver;\n\n    scrollListener = new Subject();\n    scrollListener$ = this.scrollListener.asObservable();\n\n    @ViewChild('calendarDayElement', {read: ElementRef, static: true}) calendarDayElement: ElementRef;\n    @HostListener('window:resize', ['$event']) onResize(): void {\n        this.calculateMaxEventsPerDay();\n    }\n\n    constructor(\n        formattingService: FormattingService\n    ) {\n        super(formattingService);\n\n        fromEvent(window, 'wheel')\n            .pipe(\n                takeUntil(this.scrollListener$),\n                throttle(e => interval(1000))\n            )\n            .subscribe((e: any) => this.handleScroll(e));\n\n        this.hiddenEventsDay = new CalendarDay();\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.generateView();\n        this.listenToCalendarViewportChanges();\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap(events => {\n                    this.events = events;\n                    this.generateView();\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.selectedDate$.pipe(\n                tap(() => {\n                    this.closeHiddenEvents();\n                })\n            ).subscribe()\n        );\n    }\n\n    listenToCalendarViewportChanges(): void {\n        this.observer = new MutationObserver( list => {\n            this.calculateMaxEventsPerDay();\n        });\n\n        this.observer.observe(this.calendarDayElement.nativeElement, { childList: true });\n    }\n\n    generateView(): void {\n        if (this.selectedDate) {\n            const emptyDays = this.generateDays();\n            this.populateMonthView(emptyDays);\n            this.getWeekNumbers();\n\n            this.calculateMaxEventsPerDay();\n        }\n    }\n\n    getWeekNumbers(): void {\n        const weeksOfMonth = eachWeekOfInterval({\n            start: startOfMonth(this.selectedDate),\n            end: endOfMonth(this.selectedDate)\n        });\n\n        this.weekNumbers = [];\n        weeksOfMonth.forEach(week => {\n            this.weekNumbers.push(getWeek(week, { weekStartsOn: 1 }));\n        });\n    }\n\n    populateMonthView(emptyDays: CalendarDay[]): void {\n        const populatedDays: CalendarDay[] = emptyDays;\n\n        populatedDays.forEach(day => {\n            day.events = this.events.filter((event: CalendarEvent) => {\n                return this.isSameDay(day.date, event.startTime, event.endTime);\n            }).map((event: CalendarEvent) => {\n                return this.populateEvents(event, day);\n            }).sort((a: CalendarEvent, b: CalendarEvent) => {\n                return this.sortByTime(a, b);\n            }).sort(event => {\n                return this.sortByAllDay(event);\n            });\n\n            day = this.createEventGroups(day);\n            day.eventCount = day.events.length;\n        });\n\n        this.monthView.days = populatedDays;\n    }\n\n    generateDays(): CalendarDay[] {\n        const dayOfWeek = add(startOfMonth(this.selectedDate), { days: 7 }).getDay();\n        const selectedMonthStart = sub(startOfMonth(this.selectedDate), { days: dayOfWeek - 1 });\n        const days = [];\n\n        for (let i = 0; i < 35; i++) {\n            let date = new Date(selectedMonthStart);\n            date = add(date, { days: i });\n\n            const day: CalendarDay = {\n                date,\n                eventGroups: [],\n                events: [],\n                eventCount: 0\n            };\n\n            days.push(day);\n        }\n\n        return days;\n    }\n\n    isCurrentMonth(date: Date): boolean {\n        return isSameMonth(date, this.selectedDate);\n    }\n\n    handleScroll(e: WheelEvent): void {\n        e.deltaY > 0 ? this.setCalendarOffset.emit(NEXT) : this.setCalendarOffset.emit(PREVIOUS);\n    }\n\n    toggleHiddenEvents(hiddenEventsTriggerOrigin: any, day: CalendarDay): void {\n        this.hiddenEventsTriggerOrigin = hiddenEventsTriggerOrigin;\n        this.hiddenEventsDay = day;\n        this.showHiddenEvents = !this.showHiddenEvents;\n    }\n\n    closeHiddenEvents(): void {\n        this.showHiddenEvents = false;\n    }\n\n    getHiddenEventsHeight(): number {\n        return (this.hiddenEventsDay.eventCount * 30) + 85;\n    }\n\n    calculateMaxEventsPerDay(): void {\n        const dayBlockHeight = this.calendarDayElement.nativeElement.children[0]?.getBoundingClientRect().height;\n        this.maxEventsVisible = Math.floor((dayBlockHeight - 25) / 30);\n    }\n\n    ngOnDestroy(): void {\n        this.scrollListener.next();\n        this.observer.disconnect();\n    }\n}\n","<div class=\"calendar\" *ngIf=\"events && options\">\n    <div class=\"calendar__toolbar\">\n         <button\n            mat-stroked-button\n            class=\"toolbar__button toolbar__button--today\"\n            color=\"primary\"\n            [matTooltip]=\"today\"\n            (click)=\"setCalendarToday()\">\n                Today\n        </button>\n\n        <button\n            mat-icon-button\n            class=\"toolbar__button toolbar__button--navigate\"\n            color=\"primary\"\n            (click)=\"setCalendarOffset('prev')\">\n            <mat-icon>chevron_left</mat-icon>\n        </button>\n\n        <button\n            mat-icon-button\n            class=\"toolbar__button toolbar__button--navigate\"\n            color=\"primary\"\n            (click)=\"setCalendarOffset('next')\">\n            <mat-icon>chevron_right</mat-icon>\n        </button>\n\n        <div class=\"toolbar__meta\">\n            <span class=\"toolbar__month\">{{ calendar.monthAndYear }}</span>\n            <span class=\"toolbar__week\" *ngIf=\"!getSelectedView('month')\">Week {{ calendar.weeknumber }}</span>\n        </div>\n\n        <div class=\"toolbar__right\">\n            <button\n                *ngIf=\"enableKeyboardShortcutDialog\"\n                mat-icon-button\n                matTooltip=\"Keyboard shortcuts\"\n                class=\"toolbar__button toolbar__button--keyboard-shortcut\"\n                color=\"primary\"\n                (click)=\"showKeyboardShortcutDialog()\">\n                <mat-icon>keyboard</mat-icon>\n            </button>\n\n            <mat-form-field\n                *ngIf=\"enableViewToggle\"\n                appearance=\"outline\"\n                class=\"toolbar__view-switch\">\n                <mat-select\n                    [value]=\"selectedView\"\n                    (selectionChange)=\"onViewChange(view.value)\"\n                    #view>\n                    <mat-option value=\"day\">Day</mat-option>\n                    <mat-option value=\"week\">Week</mat-option>\n                    <mat-option value=\"month\">Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-menu #datePickerMenu=\"matMenu\">\n                <div (click)=\"$event.stopPropagation()\">\n                    <mat-calendar (selectedChange)=\"onDatePickerChange($event)\"></mat-calendar>\n                </div>\n            </mat-menu>\n\n            <button\n                [matMenuTriggerFor]=\"datePickerMenu\"\n                matTooltip=\"Pick a date\"\n                *ngIf=\"enableDatePickerButton\"\n                mat-icon-button\n                class=\"toolbar__button\"\n                color=\"primary\">\n                <mat-icon>calendar_today</mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <day-view\n        *ngIf=\"getSelectedView('day')\"\n        [events$]=\"events$\"\n        [selectedDate$]=\"selectedDate$\"\n        [options$]=\"options$\"\n        (eventClick)=\"onEventClick($event)\">\n    </day-view>\n\n    <week-view\n        *ngIf=\"getSelectedView('week')\"\n        [events$]=\"events$\"\n        [selectedDate$]=\"selectedDate$\"\n        [options$]=\"options$\"\n        (eventClick)=\"onEventClick($event)\"\n        (changeToDayView)=\"changeToDayView($event)\">\n    </week-view>\n\n    <month-view\n        *ngIf=\"getSelectedView('month')\"\n        [events$]=\"events$\"\n        [selectedDate$]=\"selectedDate$\"\n        [options$]=\"options$\"\n        (eventClick)=\"onEventClick($event)\"\n        (setCalendarOffset)=\"setCalendarOffset($event)\"\n        (changeToDayView)=\"changeToDayView($event)\">\n    </month-view>\n\n    <button\n        class=\"calendar__add-button\"\n        *ngIf=\"options.enableAddEventButton\"\n        mat-fab\n        color=\"primary\"\n        (click)=\"onAddButtonClick()\">\n        <mat-icon>add</mat-icon>\n    </button>\n</div>","import { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { format, add, isToday, toDate } from 'date-fns';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport Calendar from './models/Calendar';\nimport { CalendarOptions } from './models/CalendarOptions';\nimport { CalendarEvent } from './models/CalendarEvent';\nimport { DAY, WEEK, MONTH, Views } from './models/Views';\nimport { Periods } from './models/Times';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PREVIOUS } from './models/Directions';\nimport { MatDialog } from '@angular/material/dialog';\nimport { KeyboardShortcutDialogComponent } from './components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component';\n\n@Component({\n    selector: 'ngx-mat-calendar',\n    templateUrl: './ngx-mat-calendar.component.html',\n    styleUrls: ['./ngx-mat-calendar.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxMatCalendarComponent implements OnInit, OnDestroy {\n    @Input() options$: Observable<CalendarOptions>;\n    @Input() events$: Observable<CalendarEvent[]>;\n    @Input() selectedDate$: BehaviorSubject<Date>;\n\n    @Output() dateChange: EventEmitter<Date> = new EventEmitter();\n    @Output() eventClick: EventEmitter<CalendarEvent> = new EventEmitter();\n    @Output() addButtonClick: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(MatMenuTrigger) datePickerMenu: MatMenuTrigger;\n\n    private subscriptions$: Subscription = new Subscription();\n\n    differ: any;\n    views: Views;\n    options: CalendarOptions;\n    events: CalendarEvent[];\n    selectedView: Views;\n    selectedDate: Date;\n    enableDatePickerButton: boolean;\n    enableViewToggle: boolean;\n    enableKeyboardShortcutDialog: boolean;\n    calendar = {} as Calendar;\n    today = format(new Date(), 'EEEE, d MMMM');\n\n    @HostListener('window:keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent): void {\n        this.handleKeyboardEvents(event);\n    }\n\n    constructor(\n        private dateAdapter: DateAdapter<Date>,\n        private dialog: MatDialog\n    ) {}\n\n    ngOnInit(): void {\n        this.subscriptions$.add(\n            this.options$.pipe(\n                tap((options) => {\n                    this.options = options;\n                    this.selectedView = options.view;\n                    this.initCalendar();\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap((events) => {\n                    this.events = events;\n                    this.parseDates(events);\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.selectedDate$.pipe(\n                tap(selectedDate => {\n                    this.selectedDate = selectedDate;\n                    this.initCalendar();\n\n                    if (this.selectedDate !== selectedDate) {\n                        this.dateChange.emit(this.selectedDate);\n                    }\n                })\n            ).subscribe()\n        );\n    }\n\n    initCalendar(): void {\n        if (this.options) {\n            this.enableDatePickerButton = this.options.enableDatePickerButton;\n            this.enableViewToggle = this.options.enableViewToggle;\n            this.enableKeyboardShortcutDialog = this.options.enableKeyboardShortcutDialog;\n            this.dateAdapter.setLocale(this.options.locale);\n            this.generateCalendar();\n        }\n    }\n\n    generateCalendar(): void {\n        if (this.selectedDate) {\n            this.calendar = { // @TODO: new class instance\n                monthAndYear: format(this.selectedDate, 'MMMM yyyy'),\n                weeknumber: format(this.selectedDate, 'I')\n            };\n        }\n    }\n\n    parseDates(events: CalendarEvent[]): void {\n        this.events = events.map((event: CalendarEvent) => {\n             event.date = new Date(event.date);\n             event.startTime = new Date(event.startTime);\n             event.endTime = new Date(event.endTime);\n\n             return event;\n        });\n    }\n\n    isToday(date: Date): boolean {\n        return isToday(date);\n    }\n\n    setCalendarToday(): void {\n        this.selectedDate = new Date();\n        this.selectedDate$.next(this.selectedDate);\n        this.handleCalendarSet();\n    }\n\n    setCalendarOffset(direction: string): void {\n        const offset = Periods[this.selectedView];\n\n        this.selectedDate = add(this.selectedDate, {\n            [offset]: direction === PREVIOUS ? -1 : 1\n        });\n\n        this.selectedDate$.next(this.selectedDate);\n        this.handleCalendarSet();\n    }\n\n    setCalendar(date: Date): void {\n        if (date) {\n            this.selectedDate = date;\n            this.selectedDate$.next(date);\n            this.handleCalendarSet();\n        }\n    }\n\n    handleCalendarSet(): void {\n        this.generateCalendar();\n        this.dateChange.emit(this.selectedDate);\n    }\n\n    onViewChange(view: any): void {\n        this.selectedView = view;\n    }\n\n    changeToDayView(date: Date): void {\n        this.selectedView = DAY;\n        this.setCalendar(date);\n    }\n\n    getSelectedView(view: Views): boolean {\n        return this.selectedView === view;\n    }\n\n    onEventClick(event: CalendarEvent): void {\n        this.eventClick.emit(event);\n    }\n\n    onAddButtonClick(): void {\n        this.addButtonClick.emit();\n    }\n\n    onDatePickerChange(date: any): void {\n        this.setCalendar(toDate(date));\n        this.datePickerMenu.closeMenu();\n    }\n\n    showKeyboardShortcutDialog(): void {\n        const dialogRef = this.dialog.open(KeyboardShortcutDialogComponent, {\n            data: this.options\n        });\n    }\n\n    handleKeyboardEvents(event: KeyboardEvent): void {\n        switch (event.key) {\n            case 'd':\n                this.selectedView = DAY;\n                break;\n\n            case 'w':\n                this.selectedView = WEEK;\n                break;\n\n            case 'm':\n                this.selectedView = MONTH;\n                break;\n\n            case 't':\n                this.setCalendarToday();\n                break;\n\n            case 'n':\n                this.addButtonClick.emit();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions$.unsubscribe();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { EventDisplayComponent } from './event-display/event-display.component';\nimport { EventRenderDayComponent } from './event-render/event-render-day/event-render-day.component';\nimport { EventRenderWeekComponent } from './event-render/event-render-week/event-render-week.component';\nimport { EventRenderMonthComponent } from './event-render/event-render-month/event-render-month.component';\n\nconst MaterialModules = [\n    MatIconModule,\n    MatTooltipModule\n];\n\n@NgModule({\n    declarations: [\n        EventDisplayComponent,\n        EventRenderDayComponent,\n        EventRenderWeekComponent,\n        EventRenderMonthComponent\n    ],\n    imports: [\n        BrowserModule,\n        ...MaterialModules\n    ],\n    exports: [\n        EventDisplayComponent,\n        EventRenderDayComponent,\n        EventRenderWeekComponent,\n        EventRenderMonthComponent\n    ],\n    providers: [],\n    bootstrap: []\n})\nexport class SharedComponentsModule { }\n","import { NgModule } from '@angular/core';\nimport { AllDayEventPipe } from './all-day-event.pipe';\nimport { LimitPipe } from './limit.pipe';\n\n@NgModule({\n    declarations: [\n        LimitPipe,\n        AllDayEventPipe\n    ],\n    imports: [],\n    exports: [\n        LimitPipe,\n        AllDayEventPipe\n    ],\n    providers: [],\n    bootstrap: []\n})\nexport class PipesModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DayViewComponent } from './day-view.component';\nimport { SharedComponentsModule } from '../shared/shared-components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        DayViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        SharedComponentsModule,\n        PipesModule\n    ],\n    exports: [\n        DayViewComponent\n    ],\n    entryComponents: [],\n    providers: [],\n    bootstrap: []\n})\nexport class DayViewModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { WeekViewComponent } from './week-view.component';\nimport { SharedComponentsModule } from '../shared/shared-components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        WeekViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        SharedComponentsModule,\n        PipesModule\n    ],\n    exports: [\n        WeekViewComponent\n    ],\n    entryComponents: [],\n    providers: [],\n    bootstrap: []\n})\nexport class WeekViewModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SharedComponentsModule } from '../shared/shared-components.module';\nimport { MonthViewComponent } from './month-view.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        MonthViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        SharedComponentsModule,\n        OverlayModule,\n        PipesModule\n    ],\n    exports: [\n        MonthViewComponent\n    ],\n    entryComponents: [],\n    providers: [],\n    bootstrap: []\n})\nexport class MonthViewModule { }\n","import { Injectable } from '@angular/core';\nimport { NativeDateAdapter } from '@angular/material/core';\n\n@Injectable()\nexport class LocaleDateAdapter extends NativeDateAdapter {\n    getFirstDayOfWeek(): number {\n        return 1;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMatCalendarComponent } from './ngx-mat-calendar.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DateAdapter, MatNativeDateModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { DayViewModule } from './components/day-view/day-view.module';\nimport { WeekViewModule } from './components/week-view/week-view.module';\nimport { MonthViewModule } from './components/month-view/month-view.module';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { LocaleDateAdapter } from './other/DateAdapter';\nimport { FormattingService } from './services/formatting.service';\nimport { KeyboardShortcutDialogComponent } from './components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\n\nconst MaterialModules = [\n    MatCardModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatDividerModule\n];\n\nconst ViewModules = [\n    DayViewModule,\n    WeekViewModule,\n    MonthViewModule\n];\n\n@NgModule({\n    declarations: [\n        NgxMatCalendarComponent,\n        KeyboardShortcutDialogComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ...ViewModules,\n        ...MaterialModules\n    ],\n    exports: [\n        NgxMatCalendarComponent,\n        KeyboardShortcutDialogComponent\n    ],\n    providers: [\n        FormattingService,\n        {\n            provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS,\n            useValue: {\n                useUtc: true\n            }\n        }, {\n            provide: DateAdapter,\n            useClass: LocaleDateAdapter\n        }\n    ],\n    bootstrap: []\n})\nexport class NgxMatCalendarModule { }\n"]}