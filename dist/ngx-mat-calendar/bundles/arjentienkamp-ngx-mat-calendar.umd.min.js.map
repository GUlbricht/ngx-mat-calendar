{"version":3,"sources":["../../../projects/ngx-mat-calendar/src/lib/models/Views.ts","../../../projects/ngx-mat-calendar/src/lib/models/Times.ts","../../../projects/ngx-mat-calendar/src/lib/models/Directions.ts","../../../projects/ngx-mat-calendar/src/lib/services/formatting.service.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-day/event-render-day.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-month/event-render-month.component.ts","../../../projects/ngx-mat-calendar/src/lib/models/Colors.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-week/event-render-week.component.ts","../../../projects/ngx-mat-calendar/src/lib/models/CalendarEvent.ts","../../../projects/ngx-mat-calendar/src/lib/models/CalendarOptions.ts","../../../projects/ngx-mat-calendar/src/lib/components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component.ts","../../../projects/ngx-mat-calendar/src/lib/ngx-mat-calendar.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-mat-calendar/src/lib/components/shared/base-view/base-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/models/CalendarDay.ts","../../../projects/ngx-mat-calendar/src/lib/components/day-view/day-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-display/event-display.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/shared-components.module.ts","../../../projects/ngx-mat-calendar/src/lib/pipes/all-day-event.pipe.ts","../../../projects/ngx-mat-calendar/src/lib/pipes/limit.pipe.ts","../../../projects/ngx-mat-calendar/src/lib/pipes/pipes.module.ts","../../../projects/ngx-mat-calendar/src/lib/components/day-view/day-view.module.ts","../../../projects/ngx-mat-calendar/src/lib/components/week-view/week-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/week-view/week-view.module.ts","../../../projects/ngx-mat-calendar/src/lib/components/month-view/month-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/month-view/month-view.module.ts","../../../projects/ngx-mat-calendar/src/lib/other/DateAdapter.ts","../../../projects/ngx-mat-calendar/src/lib/ngx-mat-calendar.module.ts"],"names":["Periods","MONTH","hoursOfDay","title","isEnd","daysOfWeek","PREVIOUS","FormattingService","prototype","getTime","date","format","isToday","getDayName","getDayNumber","Injectable","args","providedIn","EventRenderDayComponent","formattingService","this","ngOnInit","startTime","event","endTime","isSameDay","endsToday","Component","selector","template","Input","EventRenderMonthComponent","eventTooltip","getEventTooltip","isPastEvent","isBefore","Date","location","colors","EventRenderWeekComponent","CalendarEvent","init","allDay","color","grey","grid","CalendarEventGrid","Object","assign","offsetTop","offsetLeft","width","durationOffset","eventsInGroup","eventGroups","CalendarOptions","pixelsPerMinute","dateFormat","timeFormat","renderComponent","day","week","month","calendarEventType","jumpToSpy","enableDatePickerButton","enableAddEventButton","enableViewToggle","enableKeyboardShortcutDialog","locale","compact","view","defineProperty","KeyboardShortcutDialogComponent","data","decorators","type","Inject","MAT_DIALOG_DATA","NgxMatCalendarComponent","dateAdapter","dialog","dateChange","EventEmitter","eventClick","addButtonClick","subscriptions$","Subscription","calendar","today","onKeyDown","handleKeyboardEvents","_this","add","options$","pipe","tap","options","selectedView","initCalendar","subscribe","events$","events","parseDates","selectedDate$","selectedDate","emit","setLocale","generateCalendar","monthAndYear","weeknumber","map","setCalendarToday","next","handleCalendarSet","setCalendarOffset","direction","offset","_a","setCalendar","onViewChange","changeToDayView","getSelectedView","onEventClick","onAddButtonClick","onDatePickerChange","toDate","datePickerMenu","closeMenu","showKeyboardShortcutDialog","open","key","ngOnDestroy","unsubscribe","encapsulation","ViewEncapsulation","None","DateAdapter","MatDialog","Output","ViewChild","MatMenuTrigger","HostListener","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","ar","done","push","value","error","__spread","arguments","length","concat","BaseViewComponent","markerPosition","pixelsPerHour","calculateMarkerPosition","getPixelsPerMinute","interval","createEventGroups","uuid","uuidv4","eventGroup","eventsNotAllDay","filter","x","getOverlappingEvents","overlapEvent","includes","setEventSizes","populateEvents","calculatePixelsOffsetForEvent","compareEvent","eventsDoOverlap","areIntervalsOverlapping","start","end","inclusive","isAlreadyInEventGroup","some","forEach","eventGroupEvents","index","endOfDay","eventDurationFromStartTime","intervalToDuration","eventDurationFromMidnight","startOfDay","hours","minutes","offsetInMinutes","Math","abs","getHours","getMinutes","getCellHeight","time","now","navigateToDayView","sortByTime","a","sortByAllDay","CalendarDay","eventCount","DayViewComponent","_super","dayView","generateView","emptyDay","generateDays","populateDayView","populatedDay","sort","EventDisplayComponent","resolver","createRenderComponent","componentFactory","resolveComponentFactory","component","renderTarget","createComponent","instance","destroy","ComponentFactoryResolver","read","ViewContainerRef","static","MaterialModules","MatIconModule","MatTooltipModule","NgModule","declarations","imports","BrowserModule","exports","providers","bootstrap","AllDayEventPipe","transform","items","item","Pipe","name","LimitPipe","limit","slice","SharedComponentsModule","PipesModule","entryComponents","WeekViewComponent","weekView","emptyDays","populateWeekView","populatedDays","days","selectedWeekStart","startOfWeek","weekStartsOn","MonthViewComponent","monthView","dayBlockHeight","weekNumbers","showHiddenEvents","maxEventsVisible","scrollListener","Subject","scrollListener$","asObservable","fromEvent","window","takeUntil","throttle","handleScroll","hiddenEventsDay","onResize","calculateMaxEventsPerDay","listenToCalendarViewportChanges","closeHiddenEvents","observer","MutationObserver","list","observe","calendarDayElement","nativeElement","childList","populateMonthView","getWeekNumbers","weeksOfMonth","eachWeekOfInterval","startOfMonth","endOfMonth","getWeek","dayOfWeek","getDay","selectedMonthStart","sub","isCurrentMonth","isSameMonth","deltaY","toggleHiddenEvents","hiddenEventsTriggerOrigin","getHiddenEventsHeight","children","getBoundingClientRect","height","floor","disconnect","ElementRef","OverlayModule","LocaleDateAdapter","getFirstDayOfWeek","NativeDateAdapter","MatCardModule","MatButtonModule","MatNativeDateModule","MatFormFieldModule","MatInputModule","MatDatepickerModule","MatSelectModule","MatMenuModule","MatDialogModule","MatDividerModule","ViewModules","DayViewModule","WeekViewModule","MonthViewModule","useUtc","FormsModule","ReactiveFormsModule","provide","MAT_MOMENT_DATE_ADAPTER_OPTIONS","useValue","Éµ0","useClass"],"mappings":"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","sourcesContent":["export const DAY = 'day';\nexport const WEEK = 'week';\nexport const MONTH = 'month';\n\nexport type Views = typeof DAY | typeof WEEK | typeof MONTH;\n","export const hoursOfDay = [\n    { title: '00:00' },\n    { title: '01:00' },\n    { title: '02:00' },\n    { title: '03:00' },\n    { title: '04:00' },\n    { title: '05:00' },\n    { title: '06:00' },\n    { title: '07:00' },\n    { title: '08:00' },\n    { title: '09:00' },\n    { title: '10:00' },\n    { title: '11:00' },\n    { title: '12:00' },\n    { title: '13:00' },\n    { title: '14:00' },\n    { title: '15:00' },\n    { title: '16:00' },\n    { title: '17:00' },\n    { title: '18:00' },\n    { title: '19:00' },\n    { title: '20:00' },\n    { title: '21:00' },\n    { title: '22:00' },\n    { title: '23:00' },\n    { title: '00:00', isEnd: true }\n];\n\nexport const daysOfWeek = [\n    { title: 'Mon' },\n    { title: 'Tue' },\n    { title: 'Wed' },\n    { title: 'Thu' },\n    { title: 'Fri' },\n    { title: 'Sat' },\n    { title: 'Sun' }\n];\n\nexport enum Periods {\n    day = 'days',\n    week = 'weeks',\n    month = 'months'\n}\n","export const PREVIOUS = 'prev';\nexport const NEXT = 'next';\n\nexport type Views = typeof PREVIOUS | typeof NEXT;\n","import { Injectable } from '@angular/core';\nimport { format, isToday } from 'date-fns';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormattingService {\n    public getTime(date: Date): string {\n        return format(date, 'HH:mm');\n    }\n\n    public isToday(date: Date): boolean {\n        return isToday(date);\n    }\n\n    public getDayName(date: Date): string {\n        return format(date, 'E');\n    }\n\n    public getDayNumber(date: Date): string {\n        return format(date, 'd');\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isSameDay } from 'date-fns';\nimport { CalendarEvent } from '../../../../models/CalendarEvent';\nimport { FormattingService } from '../../../../services/formatting.service';\n\n@Component({\n    selector: 'event-render-day',\n    templateUrl: './event-render-day.component.html',\n    styleUrls: ['./event-render-day.component.scss']\n})\nexport class EventRenderDayComponent implements OnInit {\n    @Input() event: CalendarEvent;\n    @Input() date: Date;\n\n    startTime: string;\n    endTime: string;\n    isSameDay: boolean;\n    endsToday: boolean;\n\n    constructor(\n        public formattingService: FormattingService,\n    ) {}\n\n    ngOnInit(): void {\n        this.startTime = this.formattingService.getTime(this.event.startTime);\n        this.endTime = this.formattingService.getTime(this.event.endTime);\n        this.isSameDay = isSameDay(this.event.startTime, this.event.endTime);\n        this.endsToday = isSameDay(this.date, this.event.endTime);\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isBefore, isSameDay } from 'date-fns';\nimport { CalendarEvent } from '../../../../models/CalendarEvent';\nimport { FormattingService } from '../../../../services/formatting.service';\n\n@Component({\n    selector: 'event-render-month',\n    templateUrl: './event-render-month.component.html',\n    styleUrls: ['./event-render-month.component.scss']\n})\nexport class EventRenderMonthComponent implements OnInit {\n    @Input() event: CalendarEvent;\n    @Input() date: Date;\n\n    startTime: string;\n    endTime: string;\n    isSameDay: boolean;\n    endsToday: boolean;\n    eventTooltip: string;\n\n    constructor(\n        public formattingService: FormattingService,\n    ) {}\n\n    ngOnInit(): void {\n        this.startTime = this.formattingService.getTime(this.event.startTime);\n        this.endTime = this.formattingService.getTime(this.event.endTime);\n        this.isSameDay = isSameDay(this.event.startTime, this.event.endTime);\n        this.endsToday = isSameDay(this.date, this.event.endTime);\n\n        this.eventTooltip = this.getEventTooltip();\n    }\n\n    isPastEvent(): boolean {\n        return isBefore(this.event.date, new Date());\n    }\n\n    getEventTooltip(): string {\n        if (this.event.location) {\n            return `${this.event.title} (${this.startTime} - ${this.endTime}) @ ${this.event.location}`;\n        }\n\n        return `${this.event.title} (${this.startTime} - ${this.endTime})`;\n    }\n}\n","export enum colors {\n    grey = '#cfd8dc',\n    blue = '#b3e5fc',\n    pink = '#ffc1e3',\n    green = '#c8e6c9'\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isSameDay } from 'date-fns';\nimport { CalendarEvent } from '../../../../models/CalendarEvent';\nimport { FormattingService } from '../../../../services/formatting.service';\n\n@Component({\n    selector: 'event-render-week',\n    templateUrl: './event-render-week.component.html',\n    styleUrls: ['./event-render-week.component.scss']\n})\nexport class EventRenderWeekComponent implements OnInit {\n    @Input() event: CalendarEvent;\n    @Input() date: Date;\n\n    startTime: string;\n    endTime: string;\n    isSameDay: boolean;\n    endsToday: boolean;\n\n    constructor(\n        public formattingService: FormattingService,\n    ) {}\n\n    ngOnInit(): void {\n        this.startTime = this.formattingService.getTime(this.event.startTime);\n        this.endTime = this.formattingService.getTime(this.event.endTime);\n        this.isSameDay = isSameDay(this.event.startTime, this.event.endTime);\n        this.endsToday = isSameDay(this.date, this.event.endTime);\n    }\n}\n","import { colors } from './Colors';\n\nexport class CalendarEvent {\n    title = '';\n    date: Date;\n    startTime: Date;\n    endTime: Date;\n    allDay?: boolean = false;\n\n    color?: any = colors.grey;\n    grid?: CalendarEventGrid = new CalendarEventGrid();\n    location?: string;\n\n    constructor(init?: Partial<CalendarEvent>) {\n        Object.assign(this, init);\n    }\n}\n\nexport class CalendarEventGrid {\n    offsetTop = 0;\n    offsetLeft = 0;\n    width = 100;\n    durationOffset = 0;\n    eventsInGroup = 0;\n    eventGroups: string[] = [];\n}\n","import { EventRenderDayComponent } from '../components/shared/event-render/event-render-day/event-render-day.component';\nimport { EventRenderMonthComponent } from '../components/shared/event-render/event-render-month/event-render-month.component';\nimport { EventRenderWeekComponent } from '../components/shared/event-render/event-render-week/event-render-week.component';\nimport { CalendarEvent } from './CalendarEvent';\nimport { MONTH, Views } from './Views';\n\nexport class CalendarOptions {\n    pixelsPerMinute = 1.3;\n    dateFormat = 'DD-MM-YYYY';\n    timeFormat = 'HH:mm';\n    renderComponent = {\n        day: EventRenderDayComponent,\n        week: EventRenderWeekComponent,\n        month: EventRenderMonthComponent\n    };\n    calendarEventType = typeof CalendarEvent;\n    jumpToSpy = true;\n    enableDatePickerButton = true;\n    enableAddEventButton = true;\n    enableViewToggle = true;\n    enableKeyboardShortcutDialog = true;\n    locale = 'nl';\n    compact = false;\n    view: Views = MONTH;\n\n    constructor(init?: Partial<CalendarOptions>) {\n        Object.assign(this, init);\n    }\n\n    get getPixelsPerMinute(): number {\n        if (this.compact) {\n            return this.pixelsPerMinute / 2;\n        }\n\n        return this.pixelsPerMinute;\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CalendarOptions } from '../../../models/CalendarOptions';\n\n@Component({\n    selector: 'keyboard-shortcut-dialog',\n    templateUrl: './keyboard-shortcut-dialog.component.html',\n    styleUrls: ['./keyboard-shortcut-dialog.component.scss']\n})\nexport class KeyboardShortcutDialogComponent implements OnInit {\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: CalendarOptions\n    ) { }\n\n    ngOnInit(): void { }\n}\n","import { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { format, add, isToday, toDate } from 'date-fns';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport Calendar from './models/Calendar';\nimport { CalendarOptions } from './models/CalendarOptions';\nimport { CalendarEvent } from './models/CalendarEvent';\nimport { DAY, WEEK, MONTH, Views } from './models/Views';\nimport { Periods } from './models/Times';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PREVIOUS } from './models/Directions';\nimport { MatDialog } from '@angular/material/dialog';\nimport { KeyboardShortcutDialogComponent } from './components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component';\n\n@Component({\n    selector: 'ngx-mat-calendar',\n    templateUrl: './ngx-mat-calendar.component.html',\n    styleUrls: ['./ngx-mat-calendar.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxMatCalendarComponent implements OnInit, OnDestroy {\n    @Input() options$: Observable<CalendarOptions>;\n    @Input() events$: Observable<CalendarEvent[]>;\n    @Input() selectedDate$: BehaviorSubject<Date>;\n\n    @Output() dateChange: EventEmitter<Date> = new EventEmitter();\n    @Output() eventClick: EventEmitter<CalendarEvent> = new EventEmitter();\n    @Output() addButtonClick: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(MatMenuTrigger) datePickerMenu: MatMenuTrigger;\n\n    private subscriptions$: Subscription = new Subscription();\n\n    differ: any;\n    views: Views;\n    options: CalendarOptions;\n    events: CalendarEvent[];\n    selectedView: Views;\n    selectedDate: Date;\n    enableDatePickerButton: boolean;\n    enableViewToggle: boolean;\n    enableKeyboardShortcutDialog: boolean;\n    calendar = {} as Calendar;\n    today = format(new Date(), 'EEEE, d MMMM');\n\n    @HostListener('window:keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent): void {\n        this.handleKeyboardEvents(event);\n    }\n\n    constructor(\n        private dateAdapter: DateAdapter<Date>,\n        private dialog: MatDialog\n    ) {}\n\n    ngOnInit(): void {\n        this.subscriptions$.add(\n            this.options$.pipe(\n                tap((options) => {\n                    this.options = options;\n                    this.selectedView = options.view;\n                    this.initCalendar();\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap((events) => {\n                    this.events = events;\n                    this.parseDates(events);\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.selectedDate$.pipe(\n                tap(selectedDate => {\n                    this.selectedDate = selectedDate;\n                    this.initCalendar();\n\n                    if (this.selectedDate !== selectedDate) {\n                        this.dateChange.emit(this.selectedDate);\n                    }\n                })\n            ).subscribe()\n        );\n    }\n\n    initCalendar(): void {\n        if (this.options) {\n            this.enableDatePickerButton = this.options.enableDatePickerButton;\n            this.enableViewToggle = this.options.enableViewToggle;\n            this.enableKeyboardShortcutDialog = this.options.enableKeyboardShortcutDialog;\n            this.dateAdapter.setLocale(this.options.locale);\n            this.generateCalendar();\n        }\n    }\n\n    generateCalendar(): void {\n        if (this.selectedDate) {\n            this.calendar = { // @TODO: new class instance\n                monthAndYear: format(this.selectedDate, 'MMMM yyyy'),\n                weeknumber: format(this.selectedDate, 'I')\n            };\n        }\n    }\n\n    parseDates(events: CalendarEvent[]): void {\n        this.events = events.map((event: CalendarEvent) => {\n             event.date = new Date(event.date);\n             event.startTime = new Date(event.startTime);\n             event.endTime = new Date(event.endTime);\n\n             return event;\n        });\n    }\n\n    isToday(date: Date): boolean {\n        return isToday(date);\n    }\n\n    setCalendarToday(): void {\n        this.selectedDate = new Date();\n        this.selectedDate$.next(this.selectedDate);\n        this.handleCalendarSet();\n    }\n\n    setCalendarOffset(direction: string): void {\n        const offset = Periods[this.selectedView];\n\n        this.selectedDate = add(this.selectedDate, {\n            [offset]: direction === PREVIOUS ? -1 : 1\n        });\n\n        this.selectedDate$.next(this.selectedDate);\n        this.handleCalendarSet();\n    }\n\n    setCalendar(date: Date): void {\n        if (date) {\n            this.selectedDate = date;\n            this.selectedDate$.next(date);\n            this.handleCalendarSet();\n        }\n    }\n\n    handleCalendarSet(): void {\n        this.generateCalendar();\n        this.dateChange.emit(this.selectedDate);\n    }\n\n    onViewChange(view: any): void {\n        this.selectedView = view;\n    }\n\n    changeToDayView(date: Date): void {\n        this.selectedView = DAY;\n        this.setCalendar(date);\n    }\n\n    getSelectedView(view: Views): boolean {\n        return this.selectedView === view;\n    }\n\n    onEventClick(event: CalendarEvent): void {\n        this.eventClick.emit(event);\n    }\n\n    onAddButtonClick(): void {\n        this.addButtonClick.emit();\n    }\n\n    onDatePickerChange(date: any): void {\n        this.setCalendar(toDate(date));\n        this.datePickerMenu.closeMenu();\n    }\n\n    showKeyboardShortcutDialog(): void {\n        const dialogRef = this.dialog.open(KeyboardShortcutDialogComponent, {\n            data: this.options\n        });\n    }\n\n    handleKeyboardEvents(event: KeyboardEvent): void {\n        switch (event.key) {\n            case 'd':\n                this.selectedView = DAY;\n                break;\n\n            case 'w':\n                this.selectedView = WEEK;\n                break;\n\n            case 'm':\n                this.selectedView = MONTH;\n                break;\n\n            case 't':\n                this.setCalendarToday();\n                break;\n\n            case 'n':\n                this.addButtonClick.emit();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions$.unsubscribe();\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { areIntervalsOverlapping, endOfDay, getHours, getMinutes, intervalToDuration, isSameDay, startOfDay } from 'date-fns';\nimport { CalendarDay } from '../../../models/CalendarDay';\nimport { CalendarEvent, CalendarEventGrid } from '../../../models/CalendarEvent';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CalendarOptions } from '../../../models/CalendarOptions';\nimport { hoursOfDay } from '../../../models/Times';\nimport { FormattingService } from '../../../services/formatting.service';\nimport { interval, Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/internal/operators/tap';\n\n@Component({\n    template: ''\n})\nexport abstract class BaseViewComponent implements OnInit, OnDestroy {\n    @Input() options$: Observable<CalendarOptions>;\n    @Input() selectedDate$: Observable<Date>;\n    @Input() events$: Observable<CalendarEvent[]>;\n\n    @Output() eventClick: EventEmitter<CalendarEvent> = new EventEmitter();\n    @Output() changeToDayView: EventEmitter<Date> = new EventEmitter();\n\n    protected subscriptions$: Subscription = new Subscription();\n    public markerPosition = 0;\n\n    options: CalendarOptions;\n    hoursOfDay = hoursOfDay;\n    pixelsPerHour = 0;\n    selectedDate = new Date();\n    events: CalendarEvent[] = [];\n\n    protected constructor(\n        protected formattingService: FormattingService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.subscriptions$.add(\n            this.options$.pipe(\n                tap((options) => {\n                    this.options = options;\n                    this.markerPosition = this.calculateMarkerPosition();\n                    this.pixelsPerHour = this.options.getPixelsPerMinute * 60;\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.selectedDate$.pipe(\n                tap(selectedDate => {\n                    this.selectedDate = selectedDate;\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            interval(60000).pipe(\n                tap(() => {\n                    this.markerPosition = this.calculateMarkerPosition();\n                })\n            ).subscribe()\n        );\n    }\n\n    protected createEventGroups(day: CalendarDay): CalendarDay {\n        day.events.map((event: CalendarEvent) => {\n            const uuid = uuidv4();\n            let eventGroup: CalendarEvent[] = [];\n\n            if (event.grid) {\n                const eventsNotAllDay = day.events.filter(x => !x.allDay);\n                eventGroup = this.getOverlappingEvents(event, eventsNotAllDay, event.grid.eventGroups);\n\n                eventGroup.map((overlapEvent: CalendarEvent) => {\n                    if (overlapEvent.grid) {\n                        overlapEvent.grid.eventGroups.push(uuid);\n                        overlapEvent.grid.eventsInGroup = eventGroup.length;\n                    }\n\n                    if (!day.eventGroups.includes(uuid)) {\n                        day.eventGroups.push(uuid);\n                    }\n                });\n            }\n        });\n\n        this.setEventSizes(day);\n\n        return day;\n    }\n\n    protected populateEvents(event: CalendarEvent, day: CalendarDay): CalendarEvent {\n        const populatedEvent = new CalendarEvent({\n            ...event,\n            grid: this.calculatePixelsOffsetForEvent(event, day)\n        });\n\n        return populatedEvent;\n    }\n\n    private getOverlappingEvents(event: CalendarEvent, events: CalendarEvent[], eventGroups: string[]): CalendarEvent[] {\n        return events.filter((compareEvent: CalendarEvent) => {\n            const eventsDoOverlap = areIntervalsOverlapping(\n                { start: event.startTime, end: event.endTime },\n                { start: compareEvent.startTime, end: compareEvent.endTime },\n                { inclusive: true }\n            );\n\n            let isAlreadyInEventGroup = false;\n            if (compareEvent.grid) {\n                isAlreadyInEventGroup = compareEvent.grid.eventGroups.some((eventGroup: string) => {\n                    return eventGroups.includes(eventGroup);\n                });\n            }\n\n            return eventsDoOverlap && !isAlreadyInEventGroup;\n        });\n    }\n\n    private setEventSizes(day: CalendarDay): void {\n        day.eventGroups.forEach(eventGroup => {\n            const eventGroupEvents = day.events.filter((event: CalendarEvent) => {\n                return event.grid?.eventGroups.includes(eventGroup);\n            });\n\n            let index = 0;\n            eventGroupEvents.forEach((event: CalendarEvent) => {\n                if (event.grid) {\n                    event.grid.width = 100 / (eventGroupEvents.length);\n                    event.grid.offsetLeft = event.grid.width * index;\n                }\n\n                // check if already has a width/offsetLeft to determine if it's in eventgroup A or B\n\n                index++;\n            });\n        });\n    }\n\n    private calculatePixelsOffsetForEvent(event: CalendarEvent, day: CalendarDay): CalendarEventGrid {\n        let grid = new CalendarEventGrid();\n\n        const startTime = event.startTime;\n        const endTime = isSameDay(event.startTime, event.endTime) ?\n            event.endTime :\n            endOfDay(event.startTime);\n\n        const eventDurationFromStartTime = intervalToDuration({\n            start: startTime,\n            end: endTime\n        });\n\n        const eventDurationFromMidnight = intervalToDuration({\n            start: startOfDay(day.date),\n            end: event.endTime\n        });\n\n        eventDurationFromStartTime.hours = eventDurationFromStartTime.hours || 0;\n        eventDurationFromStartTime.minutes = eventDurationFromStartTime.minutes || 0;\n        eventDurationFromMidnight.hours = eventDurationFromMidnight.hours || 0;\n        eventDurationFromMidnight.minutes = eventDurationFromMidnight.minutes || 0;\n\n        const offsetInMinutes = !isSameDay(event.startTime, event.endTime) && isSameDay(event.endTime, day.date) ?\n            0 : Math.abs(getHours(startTime)) * 60 + getMinutes(startTime);\n\n        const durationOffset = !isSameDay(event.startTime, event.endTime) && isSameDay(event.endTime, day.date) ?\n            eventDurationFromMidnight.hours * 60 + eventDurationFromMidnight.minutes :\n            eventDurationFromStartTime.hours * 60 + eventDurationFromStartTime.minutes;\n\n        grid = {\n            ...grid,\n            offsetTop: offsetInMinutes * this.options.getPixelsPerMinute,\n            durationOffset: durationOffset * this.options.getPixelsPerMinute\n        };\n\n        return grid;\n    }\n\n    public getCellHeight(time: any): number {\n        if (time.isEnd) {\n            return 20;\n        }\n\n        return this.pixelsPerHour;\n    }\n\n    protected calculateMarkerPosition(): number {\n        const now = new Date();\n        const offsetTop = (getHours(now) * 60 + getMinutes(now)) * this.options.getPixelsPerMinute;\n\n        return offsetTop;\n    }\n\n    public isToday(date: Date): boolean {\n        return this.formattingService.isToday(date);\n    }\n\n    public getDayName(date: Date): string {\n        return this.formattingService.getDayName(date);\n    }\n\n    public getDayNumber(date: Date): string {\n        return this.formattingService.getDayNumber(date);\n    }\n\n    public getTime(date: Date): string {\n        return this.formattingService.getTime(date);\n    }\n\n    public onEventClick(event: CalendarEvent): void {\n        this.eventClick.emit(event);\n    }\n\n    public navigateToDayView(date: Date): void {\n        this.changeToDayView.emit(date);\n    }\n\n    protected sortByTime(a: CalendarEvent, b: CalendarEvent): number {\n        return a.startTime.getTime() - b.startTime.getTime();\n    }\n\n    protected sortByAllDay(event: CalendarEvent): number {\n        return event.allDay ? -1 : 1;\n    }\n\n    protected isSameDay(date: Date, startTime: Date, endTime: Date): boolean {\n        return isSameDay(new Date(date), new Date(startTime)) || isSameDay(new Date(date), new Date(endTime));\n    }\n\n    ngOnDestroy(): void {\n       this.subscriptions$.unsubscribe();\n    }\n}\n","import { CalendarEvent } from './CalendarEvent';\n\nexport class CalendarDay {\n    date: Date = new Date();\n    eventGroups: string[] = [];\n    events: CalendarEvent[] = [];\n    eventCount: number = 0;\n\n    constructor(init?: Partial<CalendarDay>) {\n        Object.assign(this, init);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseViewComponent } from '../shared/base-view/base-view.component';\nimport { DayView } from '../../models/Calendar';\nimport { CalendarEvent } from '../../models/CalendarEvent';\nimport { FormattingService } from '../../services/formatting.service';\nimport { tap } from 'rxjs/operators';\nimport { CalendarDay } from '../../models/CalendarDay';\n\n@Component({\n    selector: 'day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseViewComponent implements OnInit {\n    dayView = {} as DayView;\n\n    constructor(\n        formattingService: FormattingService\n    ) {\n        super(formattingService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.generateView();\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap(events => {\n                    this.events = events;\n                    this.generateView();\n                })\n            ).subscribe()\n        );\n    }\n\n    generateView(): void {\n        if (this.selectedDate) {\n            const emptyDay = this.generateDays();\n            this.populateDayView(emptyDay);\n        }\n    }\n\n    populateDayView(emptyDay: CalendarDay): void {\n        const populatedDay: CalendarDay = emptyDay;\n\n        const events = this.events.filter((event: CalendarEvent) => {\n            return this.isSameDay(populatedDay.date, event.startTime, event.endTime);\n            }).map((event: CalendarEvent) => {\n                return this.populateEvents(event, populatedDay);\n            }).sort((a: CalendarEvent, b: CalendarEvent) => {\n                return this.sortByTime(a, b);\n            });\n\n        populatedDay.events = events;\n\n        this.dayView = this.createEventGroups(populatedDay);\n    }\n\n    generateDays(): CalendarDay {\n        const date = new Date(this.selectedDate);\n\n        const day: CalendarDay = new CalendarDay({\n            date,\n            eventGroups: [],\n            events: [],\n            eventCount: 0\n        });\n\n        return day;\n    }\n}\n","import { Component, ComponentFactoryResolver, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { CalendarEvent } from '../../../models/CalendarEvent';\n\n@Component({\n    selector: 'event-display',\n    template: `<ng-template #renderTarget></ng-template>`,\n    styleUrls: ['./event-display.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class EventDisplayComponent implements OnInit, OnDestroy {\n    renderComponent: any;\n    @Input() event!: CalendarEvent;\n    @Input() date!: Date;\n    @Input() component!: any;\n\n    @ViewChild('renderTarget', { read: ViewContainerRef, static: true }) renderTarget: any;\n\n    constructor(\n        private resolver: ComponentFactoryResolver\n    ) {}\n\n    ngOnInit(): void {\n        if (this.event && !this.renderComponent) {\n            this.createRenderComponent();\n        }\n    }\n\n    createRenderComponent(): void {\n        const componentFactory = this.resolver.resolveComponentFactory(this.component);\n        this.renderComponent = this.renderTarget.createComponent(componentFactory);\n        this.renderComponent.instance.event = this.event;\n        this.renderComponent.instance.date = this.date;\n    }\n\n    ngOnDestroy(): void {\n        if (this.renderComponent) {\n            this.renderComponent.destroy();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { EventDisplayComponent } from './event-display/event-display.component';\nimport { EventRenderDayComponent } from './event-render/event-render-day/event-render-day.component';\nimport { EventRenderWeekComponent } from './event-render/event-render-week/event-render-week.component';\nimport { EventRenderMonthComponent } from './event-render/event-render-month/event-render-month.component';\n\nconst MaterialModules = [\n    MatIconModule,\n    MatTooltipModule\n];\n\n@NgModule({\n    declarations: [\n        EventDisplayComponent,\n        EventRenderDayComponent,\n        EventRenderWeekComponent,\n        EventRenderMonthComponent\n    ],\n    imports: [\n        BrowserModule,\n        ...MaterialModules\n    ],\n    exports: [\n        EventDisplayComponent,\n        EventRenderDayComponent,\n        EventRenderWeekComponent,\n        EventRenderMonthComponent\n    ],\n    providers: [],\n    bootstrap: []\n})\nexport class SharedComponentsModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'allDayEventPipe'\n})\nexport class AllDayEventPipe implements PipeTransform {\n    transform(items: any[], allDay: boolean): any {\n        if (allDay) {\n            return items.filter(item => item.allDay);\n        }\n\n        return items.filter(item => !item.allDay);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'limitPipe'\n})\nexport class LimitPipe implements PipeTransform {\n    transform(items: any[], limit: number): any {\n        return items.slice(0, limit);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { AllDayEventPipe } from './all-day-event.pipe';\nimport { LimitPipe } from './limit.pipe';\n\n@NgModule({\n    declarations: [\n        LimitPipe,\n        AllDayEventPipe\n    ],\n    imports: [],\n    exports: [\n        LimitPipe,\n        AllDayEventPipe\n    ],\n    providers: [],\n    bootstrap: []\n})\nexport class PipesModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DayViewComponent } from './day-view.component';\nimport { SharedComponentsModule } from '../shared/shared-components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        DayViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        SharedComponentsModule,\n        PipesModule\n    ],\n    exports: [\n        DayViewComponent\n    ],\n    entryComponents: [],\n    providers: [],\n    bootstrap: []\n})\nexport class DayViewModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { add, startOfWeek } from 'date-fns';\nimport { BaseViewComponent } from '../shared/base-view/base-view.component';\nimport { WeekView } from '../../models/Calendar';\nimport { CalendarEvent } from '../../models/CalendarEvent';\nimport { FormattingService } from '../../services/formatting.service';\nimport { tap } from 'rxjs/operators';\nimport { CalendarDay } from '../../models/CalendarDay';\n\n@Component({\n    selector: 'week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss']\n})\nexport class WeekViewComponent extends BaseViewComponent implements OnInit {\n    weekView = {} as WeekView;\n\n    constructor(\n        formattingService: FormattingService\n    ) {\n        super(formattingService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.generateView();\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap(events => {\n                    this.events = events;\n                    this.generateView();\n                })\n            ).subscribe()\n        );\n    }\n\n    generateView(): void {\n        if (this.selectedDate) {\n            const emptyDays = this.generateDays();\n            this.populateWeekView(emptyDays);\n        }\n    }\n\n    populateWeekView(emptyDays: CalendarDay[]): void {\n        const populatedDays: CalendarDay[] = emptyDays;\n\n        populatedDays.forEach(day => {\n            day.events = this.events.filter((event: CalendarEvent) => {\n                return this.isSameDay(day.date, event.startTime, event.endTime);\n            }).map((event: CalendarEvent) => {\n                return this.populateEvents(event, day);\n            }).sort((a: CalendarEvent, b: CalendarEvent) => {\n                return this.sortByTime(a, b);\n            });\n\n            day = this.createEventGroups(day);\n        });\n\n        this.weekView.days = populatedDays;\n    }\n\n    generateDays(): CalendarDay[] {\n        const selectedWeekStart = startOfWeek(this.selectedDate, { weekStartsOn: 1 });\n        const days = [];\n\n        for (let i = 0; i < 7; i++) {\n            let date = new Date(selectedWeekStart);\n            date = add(date, { days: i });\n\n            const day = new CalendarDay({\n                date,\n                eventGroups: [],\n                events: []\n            });\n\n            days.push(day);\n        }\n\n        return days;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { WeekViewComponent } from './week-view.component';\nimport { SharedComponentsModule } from '../shared/shared-components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        WeekViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        SharedComponentsModule,\n        PipesModule\n    ],\n    exports: [\n        WeekViewComponent\n    ],\n    entryComponents: [],\n    providers: [],\n    bootstrap: []\n})\nexport class WeekViewModule { }\n","import {\n    Component, ElementRef, EventEmitter,\n    HostListener, OnDestroy, OnInit, Output, QueryList, ViewChild, ViewChildren\n} from '@angular/core';\nimport { add, eachWeekOfInterval, endOfMonth, getWeek, isSameMonth, startOfMonth, sub } from 'date-fns';\nimport { fromEvent, interval, Subject } from 'rxjs';\nimport { takeUntil, tap, throttle } from 'rxjs/operators';\nimport { MonthView } from '../../models/Calendar';\nimport { CalendarDay } from '../../models/CalendarDay';\nimport { CalendarEvent } from '../../models/CalendarEvent';\nimport { NEXT, PREVIOUS } from '../../models/Directions';\nimport { daysOfWeek } from '../../models/Times';\nimport { FormattingService } from '../../services/formatting.service';\nimport { BaseViewComponent } from '../shared/base-view/base-view.component';\n\n@Component({\n    selector: 'month-view',\n    templateUrl: './month-view.component.html',\n    styleUrls: ['./month-view.component.scss']\n})\nexport class MonthViewComponent extends BaseViewComponent implements OnInit, OnDestroy {\n    @Output() setCalendarOffset: EventEmitter<string> = new EventEmitter();\n\n    monthView = {} as MonthView;\n    daysOfWeek = daysOfWeek;\n    dayBlockHeight = 0;\n    weekNumbers: number[] = [];\n    showHiddenEvents = false;\n    hiddenEventsTriggerOrigin: any;\n    hiddenEventsDay: CalendarDay;\n    maxEventsVisible = 0;\n    observer: MutationObserver;\n\n    scrollListener = new Subject();\n    scrollListener$ = this.scrollListener.asObservable();\n\n    @ViewChild('calendarDayElement', {read: ElementRef, static: true}) calendarDayElement: ElementRef;\n    @HostListener('window:resize', ['$event']) onResize(): void {\n        this.calculateMaxEventsPerDay();\n    }\n\n    constructor(\n        formattingService: FormattingService\n    ) {\n        super(formattingService);\n\n        fromEvent(window, 'wheel')\n            .pipe(\n                takeUntil(this.scrollListener$),\n                throttle(e => interval(1000))\n            )\n            .subscribe((e: any) => this.handleScroll(e));\n\n        this.hiddenEventsDay = new CalendarDay();\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.generateView();\n        this.listenToCalendarViewportChanges();\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap(events => {\n                    this.events = events;\n                    this.generateView();\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.selectedDate$.pipe(\n                tap(() => {\n                    this.closeHiddenEvents();\n                })\n            ).subscribe()\n        );\n    }\n\n    listenToCalendarViewportChanges(): void {\n        this.observer = new MutationObserver( list => {\n            this.calculateMaxEventsPerDay();\n        });\n\n        this.observer.observe(this.calendarDayElement.nativeElement, { childList: true });\n    }\n\n    generateView(): void {\n        if (this.selectedDate) {\n            const emptyDays = this.generateDays();\n            this.populateMonthView(emptyDays);\n            this.getWeekNumbers();\n\n            this.calculateMaxEventsPerDay();\n        }\n    }\n\n    getWeekNumbers(): void {\n        const weeksOfMonth = eachWeekOfInterval({\n            start: startOfMonth(this.selectedDate),\n            end: endOfMonth(this.selectedDate)\n        });\n\n        this.weekNumbers = [];\n        weeksOfMonth.forEach(week => {\n            this.weekNumbers.push(getWeek(week, { weekStartsOn: 1 }));\n        });\n    }\n\n    populateMonthView(emptyDays: CalendarDay[]): void {\n        const populatedDays: CalendarDay[] = emptyDays;\n\n        populatedDays.forEach(day => {\n            day.events = this.events.filter((event: CalendarEvent) => {\n                return this.isSameDay(day.date, event.startTime, event.endTime);\n            }).map((event: CalendarEvent) => {\n                return this.populateEvents(event, day);\n            }).sort((a: CalendarEvent, b: CalendarEvent) => {\n                return this.sortByTime(a, b);\n            }).sort(event => {\n                return this.sortByAllDay(event);\n            });\n\n            day = this.createEventGroups(day);\n            day.eventCount = day.events.length;\n        });\n\n        this.monthView.days = populatedDays;\n    }\n\n    generateDays(): CalendarDay[] {\n        const dayOfWeek = add(startOfMonth(this.selectedDate), { days: 7 }).getDay();\n        const selectedMonthStart = sub(startOfMonth(this.selectedDate), { days: dayOfWeek - 1 });\n        const days = [];\n\n        for (let i = 0; i < 35; i++) {\n            let date = new Date(selectedMonthStart);\n            date = add(date, { days: i });\n\n            const day: CalendarDay = {\n                date,\n                eventGroups: [],\n                events: [],\n                eventCount: 0\n            };\n\n            days.push(day);\n        }\n\n        return days;\n    }\n\n    isCurrentMonth(date: Date): boolean {\n        return isSameMonth(date, this.selectedDate);\n    }\n\n    handleScroll(e: WheelEvent): void {\n        e.deltaY > 0 ? this.setCalendarOffset.emit(NEXT) : this.setCalendarOffset.emit(PREVIOUS);\n    }\n\n    toggleHiddenEvents(hiddenEventsTriggerOrigin: any, day: CalendarDay): void {\n        this.hiddenEventsTriggerOrigin = hiddenEventsTriggerOrigin;\n        this.hiddenEventsDay = day;\n        this.showHiddenEvents = !this.showHiddenEvents;\n    }\n\n    closeHiddenEvents(): void {\n        this.showHiddenEvents = false;\n    }\n\n    getHiddenEventsHeight(): number {\n        return (this.hiddenEventsDay.eventCount * 30) + 85;\n    }\n\n    calculateMaxEventsPerDay(): void {\n        const dayBlockHeight = this.calendarDayElement.nativeElement.children[0]?.getBoundingClientRect().height;\n        this.maxEventsVisible = Math.floor((dayBlockHeight - 25) / 30);\n    }\n\n    ngOnDestroy(): void {\n        this.scrollListener.next();\n        this.observer.disconnect();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SharedComponentsModule } from '../shared/shared-components.module';\nimport { MonthViewComponent } from './month-view.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        MonthViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        SharedComponentsModule,\n        OverlayModule,\n        PipesModule\n    ],\n    exports: [\n        MonthViewComponent\n    ],\n    entryComponents: [],\n    providers: [],\n    bootstrap: []\n})\nexport class MonthViewModule { }\n","import { Injectable } from '@angular/core';\nimport { NativeDateAdapter } from '@angular/material/core';\n\n@Injectable()\nexport class LocaleDateAdapter extends NativeDateAdapter {\n    getFirstDayOfWeek(): number {\n        return 1;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMatCalendarComponent } from './ngx-mat-calendar.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DateAdapter, MatNativeDateModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { DayViewModule } from './components/day-view/day-view.module';\nimport { WeekViewModule } from './components/week-view/week-view.module';\nimport { MonthViewModule } from './components/month-view/month-view.module';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { LocaleDateAdapter } from './other/DateAdapter';\nimport { FormattingService } from './services/formatting.service';\nimport { KeyboardShortcutDialogComponent } from './components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\n\nconst MaterialModules = [\n    MatCardModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatDividerModule\n];\n\nconst ViewModules = [\n    DayViewModule,\n    WeekViewModule,\n    MonthViewModule\n];\n\n@NgModule({\n    declarations: [\n        NgxMatCalendarComponent,\n        KeyboardShortcutDialogComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ...ViewModules,\n        ...MaterialModules\n    ],\n    exports: [\n        NgxMatCalendarComponent,\n        KeyboardShortcutDialogComponent\n    ],\n    providers: [\n        FormattingService,\n        {\n            provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS,\n            useValue: {\n                useUtc: true\n            }\n        }, {\n            provide: DateAdapter,\n            useClass: LocaleDateAdapter\n        }\n    ],\n    bootstrap: []\n})\nexport class NgxMatCalendarModule { }\n"]}