import { Component } from '@angular/core';
import { BaseViewComponent } from '../shared/base-view/base-view.component';
import { FormattingService } from '../../services/formatting.service';
import { tap } from 'rxjs/operators';
import { CalendarDay } from '../../models/CalendarDay';
export class DayViewComponent extends BaseViewComponent {
    constructor(formattingService) {
        super(formattingService);
        this.dayView = {};
    }
    ngOnInit() {
        super.ngOnInit();
        this.generateView();
        this.subscriptions$.add(this.events$.pipe(tap(events => {
            this.events = events;
            this.generateView();
        })).subscribe());
    }
    generateView() {
        if (this.selectedDate) {
            const emptyDay = this.generateDays();
            this.populateDayView(emptyDay);
        }
    }
    populateDayView(emptyDay) {
        const populatedDay = emptyDay;
        const events = this.events.filter((event) => {
            return this.isSameDay(populatedDay.date, event.startTime, event.endTime);
        }).map((event) => {
            return this.populateEvents(event, populatedDay);
        }).sort((a, b) => {
            return this.sortByTime(a, b);
        });
        populatedDay.events = events;
        this.dayView = this.createEventGroups(populatedDay);
    }
    generateDays() {
        const date = new Date(this.selectedDate);
        const day = new CalendarDay({
            date,
            eventGroups: [],
            events: [],
            eventCount: 0
        });
        return day;
    }
}
DayViewComponent.decorators = [
    { type: Component, args: [{
                selector: 'day-view',
                template: "<div class=\"calendar__days\">\n    <div class=\"calendar__day\">\n        <div class=\"day__header\" [ngClass]=\"{ 'day__header--today ': isToday(selectedDate) }\">\n            <span class=\"day-name\">{{ getDayName(selectedDate) }}</span> \n            <span class=\"day-number\">{{ getDayNumber(selectedDate) }}</span>\n        </div>\n    </div>\n</div> \n\n<div class=\"calendar__content\">\n    <div class=\"calendar__day-events\">\n        <div class=\"day__lane\">\n            <event-display\n                *ngFor=\"let event of dayView.events | allDayEventPipe: true\"\n                class=\"calendar__item\"\n                [component]=\"options.renderComponent.day\"\n                [event]=\"event\"\n                [date]=\"selectedDate\"\n                (click)=\"onEventClick(event)\">\n            </event-display>\n        </div>\n    </div>\n\n    <div class=\"calendar__lanes\">\n        <div class=\"calendar__times\">\n            <div class=\"time-cell\" *ngFor=\"let hour of hoursOfDay;\" [style.height.px]=\"getCellHeight(hour)\">\n                {{ hour.title }}\n            </div>\n        </div>\n\n        <div class=\"day__lane\" [ngClass]=\"{ 'day__lane--today': isToday(selectedDate) }\">\n            <div class=\"time-grid\">\n                <div class=\"time-grid__cell\" *ngFor=\"let hour of hoursOfDay;\" [style.height.px]=\"getCellHeight(hour)\"></div>\n            </div> \n\n            <div class=\"calendar__marker\" *ngIf=\"isToday(selectedDate)\" [style.marginTop.px]=\"markerPosition\"></div>\n            \n            <event-display\n                *ngFor=\"let event of dayView.events | allDayEventPipe: false\"\n                class=\"calendar__item\"\n                [component]=\"options.renderComponent.day\"\n                [event]=\"event\"\n                [date]=\"selectedDate\"                \n                [style.width.%]=\"event.grid?.width\"\n                [style.marginLeft.%]=\"event.grid?.offsetLeft\"\n                [style.marginTop.px]=\"event.grid?.offsetTop\"\n                [style.height.px]=\"event.grid?.durationOffset\"\n                (click)=\"onEventClick(event)\">\n            </event-display>\n        </div>\n    </div>\n</div>",
                styles: ["*{box-sizing:border-box}.calendar__item{display:flex;flex:1;flex-direction:column;position:absolute;left:0;padding:2px;border-radius:4px;width:100%;transition:.25s}.calendar__item:hover{opacity:.75;cursor:pointer}.calendar__times{position:relative;top:-10px;display:flex;width:60px;margin-right:20px;flex-direction:column;color:#c8c8c8;text-align:center}.time-cell{display:flex;justify-content:center}.calendar__content{flex:1;flex-direction:column;overflow:scroll;margin-top:100px}.calendar__days{position:absolute;top:65px;left:0;bottom:0;right:0;display:flex;flex-direction:row;margin-left:79px;border-left:1px solid #efefef}.calendar__day{display:flex;flex:1;justify-content:flex-start;border-right:1px solid #efefef;padding-right:.5rem;margin-left:.5rem}.calendar__day .day__header{display:flex;flex-direction:column;align-items:center;color:#c8c8c8}.calendar__day .day__header .day-name{margin-bottom:.5rem}.calendar__day .day__header .day-number{display:flex;justify-content:center;align-items:center;margin-bottom:.5rem;width:40px;height:40px;border-radius:20px;background-color:#efefef;color:#2a2a2a}.calendar__day .day__header--today .day-number{background-color:#263238;color:#fff}.calendar__day-events{position:-webkit-sticky;position:sticky;top:0;z-index:2;display:flex;flex-direction:row;margin-left:79px;background-color:#fff;border-left:1px solid #efefef}.calendar__day-events .day__lane{position:relative;display:flex;flex:1;flex-direction:column;overflow:hidden;border-right:1px solid #efefef}.calendar__day-events .day__lane .calendar__item{position:relative}.calendar__day-events .day__lane .calendar__item .event__header{border-bottom:0}.calendar__marker{position:relative;z-index:1;border:1px solid #d32f2f;width:calc(100% + 1rem);left:-.5rem}.calendar__marker:before{content:\"\";display:block;position:absolute;width:10px;background-color:#d32f2f;height:10px;border-radius:10px;top:-5px;left:-7px}.calendar__lanes{display:flex;flex:1;flex-direction:row;padding-top:10px}.calendar__lanes .day__lane{display:flex;flex-direction:column;position:relative;flex:1;padding:0 .5rem;border-right:1px solid #efefef;transition:.25s;background-color:#f4f4f4}.calendar__lanes .day__lane .time-grid{position:absolute;top:0;left:0;width:100%}.calendar__lanes .day__lane .time-grid__cell{border-top:1px dotted #dbdbdb;width:100%}.calendar__lanes .day__lane--today{background-color:#eef7fb}.calendar__lanes .day__lane--today .time-grid__cell{border-top-color:#c5e3f1}"]
            },] }
];
DayViewComponent.ctorParameters = () => [
    { type: FormattingService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF5LXZpZXcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LW1hdC1jYWxlbmRhci9zcmMvbGliL2NvbXBvbmVudHMvZGF5LXZpZXcvZGF5LXZpZXcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFHNUUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdEUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQU92RCxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsaUJBQWlCO0lBR25ELFlBQ0ksaUJBQW9DO1FBRXBDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBTDdCLFlBQU8sR0FBRyxFQUFhLENBQUM7SUFNeEIsQ0FBQztJQUVELFFBQVE7UUFDSixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRXBCLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUNuQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FDYixHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDVCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUNyQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDeEIsQ0FBQyxDQUFDLENBQ0wsQ0FBQyxTQUFTLEVBQUUsQ0FDaEIsQ0FBQztJQUNOLENBQUM7SUFFRCxZQUFZO1FBQ1IsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ25CLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNyQyxJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQztJQUVELGVBQWUsQ0FBQyxRQUFxQjtRQUNqQyxNQUFNLFlBQVksR0FBZ0IsUUFBUSxDQUFDO1FBRTNDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBb0IsRUFBRSxFQUFFO1lBQ3ZELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3pFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQW9CLEVBQUUsRUFBRTtZQUM1QixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3BELENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQWdCLEVBQUUsQ0FBZ0IsRUFBRSxFQUFFO1lBQzNDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUM7UUFFUCxZQUFZLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUU3QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsWUFBWTtRQUNSLE1BQU0sSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUV6QyxNQUFNLEdBQUcsR0FBZ0IsSUFBSSxXQUFXLENBQUM7WUFDckMsSUFBSTtZQUNKLFdBQVcsRUFBRSxFQUFFO1lBQ2YsTUFBTSxFQUFFLEVBQUU7WUFDVixVQUFVLEVBQUUsQ0FBQztTQUNoQixDQUFDLENBQUM7UUFFSCxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7OztZQTlESixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLFVBQVU7Z0JBQ3BCLHFzRUFBd0M7O2FBRTNDOzs7WUFSUSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZVZpZXdDb21wb25lbnQgfSBmcm9tICcuLi9zaGFyZWQvYmFzZS12aWV3L2Jhc2Utdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF5VmlldyB9IGZyb20gJy4uLy4uL21vZGVscy9DYWxlbmRhcic7XG5pbXBvcnQgeyBDYWxlbmRhckV2ZW50IH0gZnJvbSAnLi4vLi4vbW9kZWxzL0NhbGVuZGFyRXZlbnQnO1xuaW1wb3J0IHsgRm9ybWF0dGluZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9mb3JtYXR0aW5nLnNlcnZpY2UnO1xuaW1wb3J0IHsgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQ2FsZW5kYXJEYXkgfSBmcm9tICcuLi8uLi9tb2RlbHMvQ2FsZW5kYXJEYXknO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2RheS12aWV3JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZGF5LXZpZXcuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2RheS12aWV3LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRGF5Vmlld0NvbXBvbmVudCBleHRlbmRzIEJhc2VWaWV3Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBkYXlWaWV3ID0ge30gYXMgRGF5VmlldztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBmb3JtYXR0aW5nU2VydmljZTogRm9ybWF0dGluZ1NlcnZpY2VcbiAgICApIHtcbiAgICAgICAgc3VwZXIoZm9ybWF0dGluZ1NlcnZpY2UpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICBzdXBlci5uZ09uSW5pdCgpO1xuICAgICAgICB0aGlzLmdlbmVyYXRlVmlldygpO1xuXG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucyQuYWRkKFxuICAgICAgICAgICAgdGhpcy5ldmVudHMkLnBpcGUoXG4gICAgICAgICAgICAgICAgdGFwKGV2ZW50cyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzID0gZXZlbnRzO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlVmlldygpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApLnN1YnNjcmliZSgpXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZ2VuZXJhdGVWaWV3KCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZERhdGUpIHtcbiAgICAgICAgICAgIGNvbnN0IGVtcHR5RGF5ID0gdGhpcy5nZW5lcmF0ZURheXMoKTtcbiAgICAgICAgICAgIHRoaXMucG9wdWxhdGVEYXlWaWV3KGVtcHR5RGF5KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHBvcHVsYXRlRGF5VmlldyhlbXB0eURheTogQ2FsZW5kYXJEYXkpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgcG9wdWxhdGVkRGF5OiBDYWxlbmRhckRheSA9IGVtcHR5RGF5O1xuXG4gICAgICAgIGNvbnN0IGV2ZW50cyA9IHRoaXMuZXZlbnRzLmZpbHRlcigoZXZlbnQ6IENhbGVuZGFyRXZlbnQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmlzU2FtZURheShwb3B1bGF0ZWREYXkuZGF0ZSwgZXZlbnQuc3RhcnRUaW1lLCBldmVudC5lbmRUaW1lKTtcbiAgICAgICAgICAgIH0pLm1hcCgoZXZlbnQ6IENhbGVuZGFyRXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wb3B1bGF0ZUV2ZW50cyhldmVudCwgcG9wdWxhdGVkRGF5KTtcbiAgICAgICAgICAgIH0pLnNvcnQoKGE6IENhbGVuZGFyRXZlbnQsIGI6IENhbGVuZGFyRXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zb3J0QnlUaW1lKGEsIGIpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgcG9wdWxhdGVkRGF5LmV2ZW50cyA9IGV2ZW50cztcblxuICAgICAgICB0aGlzLmRheVZpZXcgPSB0aGlzLmNyZWF0ZUV2ZW50R3JvdXBzKHBvcHVsYXRlZERheSk7XG4gICAgfVxuXG4gICAgZ2VuZXJhdGVEYXlzKCk6IENhbGVuZGFyRGF5IHtcbiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRoaXMuc2VsZWN0ZWREYXRlKTtcblxuICAgICAgICBjb25zdCBkYXk6IENhbGVuZGFyRGF5ID0gbmV3IENhbGVuZGFyRGF5KHtcbiAgICAgICAgICAgIGRhdGUsXG4gICAgICAgICAgICBldmVudEdyb3VwczogW10sXG4gICAgICAgICAgICBldmVudHM6IFtdLFxuICAgICAgICAgICAgZXZlbnRDb3VudDogMFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGF5O1xuICAgIH1cbn1cbiJdfQ==