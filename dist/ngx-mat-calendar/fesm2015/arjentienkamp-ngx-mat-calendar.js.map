{"version":3,"file":"arjentienkamp-ngx-mat-calendar.js","sources":["../../../projects/ngx-mat-calendar/src/lib/models/Views.ts","../../../projects/ngx-mat-calendar/src/lib/models/Times.ts","../../../projects/ngx-mat-calendar/src/lib/models/Directions.ts","../../../projects/ngx-mat-calendar/src/lib/services/formatting.service.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-day/event-render-day.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-month/event-render-month.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-render/event-render-week/event-render-week.component.ts","../../../projects/ngx-mat-calendar/src/lib/models/Colors.ts","../../../projects/ngx-mat-calendar/src/lib/models/CalendarEvent.ts","../../../projects/ngx-mat-calendar/src/lib/models/CalendarOptions.ts","../../../projects/ngx-mat-calendar/src/lib/components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component.ts","../../../projects/ngx-mat-calendar/src/lib/ngx-mat-calendar.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/base-view/base-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/models/CalendarDay.ts","../../../projects/ngx-mat-calendar/src/lib/components/day-view/day-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/event-display/event-display.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/shared/shared-components.module.ts","../../../projects/ngx-mat-calendar/src/lib/pipes/all-day-event.pipe.ts","../../../projects/ngx-mat-calendar/src/lib/pipes/limit.pipe.ts","../../../projects/ngx-mat-calendar/src/lib/pipes/pipes.module.ts","../../../projects/ngx-mat-calendar/src/lib/components/day-view/day-view.module.ts","../../../projects/ngx-mat-calendar/src/lib/components/week-view/week-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/week-view/week-view.module.ts","../../../projects/ngx-mat-calendar/src/lib/components/month-view/month-view.component.ts","../../../projects/ngx-mat-calendar/src/lib/components/month-view/month-view.module.ts","../../../projects/ngx-mat-calendar/src/lib/other/DateAdapter.ts","../../../projects/ngx-mat-calendar/src/lib/ngx-mat-calendar.module.ts","../../../projects/ngx-mat-calendar/src/public-api.ts","../../../projects/ngx-mat-calendar/src/arjentienkamp-ngx-mat-calendar.ts"],"sourcesContent":["export const DAY = 'day';\nexport const WEEK = 'week';\nexport const MONTH = 'month';\n\nexport type Views = typeof DAY | typeof WEEK | typeof MONTH;\n","export const hoursOfDay = [\n    { title: '00:00' },\n    { title: '01:00' },\n    { title: '02:00' },\n    { title: '03:00' },\n    { title: '04:00' },\n    { title: '05:00' },\n    { title: '06:00' },\n    { title: '07:00' },\n    { title: '08:00' },\n    { title: '09:00' },\n    { title: '10:00' },\n    { title: '11:00' },\n    { title: '12:00' },\n    { title: '13:00' },\n    { title: '14:00' },\n    { title: '15:00' },\n    { title: '16:00' },\n    { title: '17:00' },\n    { title: '18:00' },\n    { title: '19:00' },\n    { title: '20:00' },\n    { title: '21:00' },\n    { title: '22:00' },\n    { title: '23:00' },\n    { title: '00:00', isEnd: true }\n];\n\nexport const daysOfWeek = [\n    { title: 'Mon' },\n    { title: 'Tue' },\n    { title: 'Wed' },\n    { title: 'Thu' },\n    { title: 'Fri' },\n    { title: 'Sat' },\n    { title: 'Sun' }\n];\n\nexport enum Periods {\n    day = 'days',\n    week = 'weeks',\n    month = 'months'\n}\n","export const PREVIOUS = 'prev';\nexport const NEXT = 'next';\n\nexport type Views = typeof PREVIOUS | typeof NEXT;\n","import { Injectable } from '@angular/core';\nimport { format, isToday } from 'date-fns';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormattingService {\n    public getTime(date: Date): string {\n        return format(date, 'HH:mm');\n    }\n\n    public isToday(date: Date): boolean {\n        return isToday(date);\n    }\n\n    public getDayName(date: Date): string {\n        return format(date, 'E');\n    }\n\n    public getDayNumber(date: Date): string {\n        return format(date, 'd');\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isSameDay } from 'date-fns';\nimport { CalendarEvent } from '../../../../models/CalendarEvent';\nimport { FormattingService } from '../../../../services/formatting.service';\n\n@Component({\n    selector: 'event-render-day',\n    templateUrl: './event-render-day.component.html',\n    styleUrls: ['./event-render-day.component.scss']\n})\nexport class EventRenderDayComponent implements OnInit {\n    @Input() event: CalendarEvent;\n    @Input() date: Date;\n\n    startTime: string;\n    endTime: string;\n    isSameDay: boolean;\n    endsToday: boolean;\n\n    constructor(\n        public formattingService: FormattingService,\n    ) {}\n\n    ngOnInit(): void {\n        this.startTime = this.formattingService.getTime(this.event.startTime);\n        this.endTime = this.formattingService.getTime(this.event.endTime);\n        this.isSameDay = isSameDay(this.event.startTime, this.event.endTime);\n        this.endsToday = isSameDay(this.date, this.event.endTime);\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isBefore, isSameDay } from 'date-fns';\nimport { CalendarEvent } from '../../../../models/CalendarEvent';\nimport { FormattingService } from '../../../../services/formatting.service';\n\n@Component({\n    selector: 'event-render-month',\n    templateUrl: './event-render-month.component.html',\n    styleUrls: ['./event-render-month.component.scss']\n})\nexport class EventRenderMonthComponent implements OnInit {\n    @Input() event: CalendarEvent;\n    @Input() date: Date;\n\n    startTime: string;\n    endTime: string;\n    isSameDay: boolean;\n    endsToday: boolean;\n    eventTooltip: string;\n\n    constructor(\n        public formattingService: FormattingService,\n    ) {}\n\n    ngOnInit(): void {\n        this.startTime = this.formattingService.getTime(this.event.startTime);\n        this.endTime = this.formattingService.getTime(this.event.endTime);\n        this.isSameDay = isSameDay(this.event.startTime, this.event.endTime);\n        this.endsToday = isSameDay(this.date, this.event.endTime);\n\n        this.eventTooltip = this.getEventTooltip();\n    }\n\n    isPastEvent(): boolean {\n        return isBefore(this.event.date, new Date());\n    }\n\n    getEventTooltip(): string {\n        if (this.event.location) {\n            return `${this.event.title} (${this.startTime} - ${this.endTime}) @ ${this.event.location}`;\n        }\n\n        return `${this.event.title} (${this.startTime} - ${this.endTime})`;\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isSameDay } from 'date-fns';\nimport { CalendarEvent } from '../../../../models/CalendarEvent';\nimport { FormattingService } from '../../../../services/formatting.service';\n\n@Component({\n    selector: 'event-render-week',\n    templateUrl: './event-render-week.component.html',\n    styleUrls: ['./event-render-week.component.scss']\n})\nexport class EventRenderWeekComponent implements OnInit {\n    @Input() event: CalendarEvent;\n    @Input() date: Date;\n\n    startTime: string;\n    endTime: string;\n    isSameDay: boolean;\n    endsToday: boolean;\n\n    constructor(\n        public formattingService: FormattingService,\n    ) {}\n\n    ngOnInit(): void {\n        this.startTime = this.formattingService.getTime(this.event.startTime);\n        this.endTime = this.formattingService.getTime(this.event.endTime);\n        this.isSameDay = isSameDay(this.event.startTime, this.event.endTime);\n        this.endsToday = isSameDay(this.date, this.event.endTime);\n    }\n}\n","export enum colors {\n    grey = '#cfd8dc',\n    blue = '#b3e5fc',\n    pink = '#ffc1e3',\n    green = '#c8e6c9'\n}\n","import { colors } from './Colors';\n\nexport class CalendarEvent {\n    title = '';\n    date: Date;\n    startTime: Date;\n    endTime: Date;\n    allDay?: boolean = false;\n\n    color?: any = colors.grey;\n    grid?: CalendarEventGrid = new CalendarEventGrid();\n    location?: string;\n\n    constructor(init?: Partial<CalendarEvent>) {\n        Object.assign(this, init);\n    }\n}\n\nexport class CalendarEventGrid {\n    offsetTop = 0;\n    offsetLeft = 0;\n    width = 100;\n    durationOffset = 0;\n    eventsInGroup = 0;\n    eventGroups: string[] = [];\n}\n","import { EventRenderDayComponent } from '../components/shared/event-render/event-render-day/event-render-day.component';\nimport { EventRenderMonthComponent } from '../components/shared/event-render/event-render-month/event-render-month.component';\nimport { EventRenderWeekComponent } from '../components/shared/event-render/event-render-week/event-render-week.component';\nimport { CalendarEvent } from './CalendarEvent';\nimport { MONTH, Views } from './Views';\n\nexport class CalendarOptions {\n    pixelsPerMinute = 1.3;\n    dateFormat = 'DD-MM-YYYY';\n    timeFormat = 'HH:mm';\n    renderComponent = {\n        day: EventRenderDayComponent,\n        week: EventRenderWeekComponent,\n        month: EventRenderMonthComponent\n    };\n    calendarEventType = typeof CalendarEvent;\n    jumpToSpy = true;\n    enableDatePickerButton = true;\n    enableAddEventButton = true;\n    enableViewToggle = true;\n    enableKeyboardShortcutDialog = true;\n    locale = 'nl';\n    compact = false;\n    view: Views = MONTH;\n\n    constructor(init?: Partial<CalendarOptions>) {\n        Object.assign(this, init);\n    }\n\n    get getPixelsPerMinute(): number {\n        if (this.compact) {\n            return this.pixelsPerMinute / 2;\n        }\n\n        return this.pixelsPerMinute;\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CalendarOptions } from '../../../models/CalendarOptions';\n\n@Component({\n    selector: 'keyboard-shortcut-dialog',\n    templateUrl: './keyboard-shortcut-dialog.component.html',\n    styleUrls: ['./keyboard-shortcut-dialog.component.scss']\n})\nexport class KeyboardShortcutDialogComponent implements OnInit {\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: CalendarOptions\n    ) { }\n\n    ngOnInit(): void { }\n}\n","import { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { format, add, isToday, toDate } from 'date-fns';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport Calendar from './models/Calendar';\nimport { CalendarOptions } from './models/CalendarOptions';\nimport { CalendarEvent } from './models/CalendarEvent';\nimport { DAY, WEEK, MONTH, Views } from './models/Views';\nimport { Periods } from './models/Times';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PREVIOUS } from './models/Directions';\nimport { MatDialog } from '@angular/material/dialog';\nimport { KeyboardShortcutDialogComponent } from './components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component';\n\n@Component({\n    selector: 'ngx-mat-calendar',\n    templateUrl: './ngx-mat-calendar.component.html',\n    styleUrls: ['./ngx-mat-calendar.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxMatCalendarComponent implements OnInit, OnDestroy {\n    @Input() options$: Observable<CalendarOptions>;\n    @Input() events$: Observable<CalendarEvent[]>;\n    @Input() selectedDate$: BehaviorSubject<Date>;\n\n    @Output() dateChange: EventEmitter<Date> = new EventEmitter();\n    @Output() eventClick: EventEmitter<CalendarEvent> = new EventEmitter();\n    @Output() addButtonClick: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(MatMenuTrigger) datePickerMenu: MatMenuTrigger;\n\n    private subscriptions$: Subscription = new Subscription();\n\n    differ: any;\n    views: Views;\n    options: CalendarOptions;\n    events: CalendarEvent[];\n    selectedView: Views;\n    selectedDate: Date;\n    enableDatePickerButton: boolean;\n    enableViewToggle: boolean;\n    enableKeyboardShortcutDialog: boolean;\n    calendar = {} as Calendar;\n    today = format(new Date(), 'EEEE, d MMMM');\n\n    @HostListener('window:keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent): void {\n        this.handleKeyboardEvents(event);\n    }\n\n    constructor(\n        private dateAdapter: DateAdapter<Date>,\n        private dialog: MatDialog\n    ) {}\n\n    ngOnInit(): void {\n        this.subscriptions$.add(\n            this.options$.pipe(\n                tap((options) => {\n                    this.options = options;\n                    this.selectedView = options.view;\n                    this.initCalendar();\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap((events) => {\n                    this.events = events;\n                    this.parseDates(events);\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.selectedDate$.pipe(\n                tap(selectedDate => {\n                    this.selectedDate = selectedDate;\n                    this.initCalendar();\n\n                    if (this.selectedDate !== selectedDate) {\n                        this.dateChange.emit(this.selectedDate);\n                    }\n                })\n            ).subscribe()\n        );\n    }\n\n    initCalendar(): void {\n        if (this.options) {\n            this.enableDatePickerButton = this.options.enableDatePickerButton;\n            this.enableViewToggle = this.options.enableViewToggle;\n            this.enableKeyboardShortcutDialog = this.options.enableKeyboardShortcutDialog;\n            this.dateAdapter.setLocale(this.options.locale);\n            this.generateCalendar();\n        }\n    }\n\n    generateCalendar(): void {\n        if (this.selectedDate) {\n            this.calendar = { // @TODO: new class instance\n                monthAndYear: format(this.selectedDate, 'MMMM yyyy'),\n                weeknumber: format(this.selectedDate, 'I')\n            };\n        }\n    }\n\n    parseDates(events: CalendarEvent[]): void {\n        this.events = events.map((event: CalendarEvent) => {\n             event.date = new Date(event.date);\n             event.startTime = new Date(event.startTime);\n             event.endTime = new Date(event.endTime);\n\n             return event;\n        });\n    }\n\n    isToday(date: Date): boolean {\n        return isToday(date);\n    }\n\n    setCalendarToday(): void {\n        this.selectedDate = new Date();\n        this.selectedDate$.next(this.selectedDate);\n        this.handleCalendarSet();\n    }\n\n    setCalendarOffset(direction: string): void {\n        const offset = Periods[this.selectedView];\n\n        this.selectedDate = add(this.selectedDate, {\n            [offset]: direction === PREVIOUS ? -1 : 1\n        });\n\n        this.selectedDate$.next(this.selectedDate);\n        this.handleCalendarSet();\n    }\n\n    setCalendar(date: Date): void {\n        if (date) {\n            this.selectedDate = date;\n            this.selectedDate$.next(date);\n            this.handleCalendarSet();\n        }\n    }\n\n    handleCalendarSet(): void {\n        this.generateCalendar();\n        this.dateChange.emit(this.selectedDate);\n    }\n\n    onViewChange(view: any): void {\n        this.selectedView = view;\n    }\n\n    changeToDayView(date: Date): void {\n        this.selectedView = DAY;\n        this.setCalendar(date);\n    }\n\n    getSelectedView(view: Views): boolean {\n        return this.selectedView === view;\n    }\n\n    onEventClick(event: CalendarEvent): void {\n        this.eventClick.emit(event);\n    }\n\n    onAddButtonClick(): void {\n        this.addButtonClick.emit();\n    }\n\n    onDatePickerChange(date: any): void {\n        this.setCalendar(toDate(date));\n        this.datePickerMenu.closeMenu();\n    }\n\n    showKeyboardShortcutDialog(): void {\n        const dialogRef = this.dialog.open(KeyboardShortcutDialogComponent, {\n            data: this.options\n        });\n    }\n\n    handleKeyboardEvents(event: KeyboardEvent): void {\n        switch (event.key) {\n            case 'd':\n                this.selectedView = DAY;\n                break;\n\n            case 'w':\n                this.selectedView = WEEK;\n                break;\n\n            case 'm':\n                this.selectedView = MONTH;\n                break;\n\n            case 't':\n                this.setCalendarToday();\n                break;\n\n            case 'n':\n                this.addButtonClick.emit();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions$.unsubscribe();\n    }\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { areIntervalsOverlapping, endOfDay, getHours, getMinutes, intervalToDuration, isSameDay, startOfDay } from 'date-fns';\nimport { CalendarDay } from '../../../models/CalendarDay';\nimport { CalendarEvent, CalendarEventGrid } from '../../../models/CalendarEvent';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CalendarOptions } from '../../../models/CalendarOptions';\nimport { hoursOfDay } from '../../../models/Times';\nimport { FormattingService } from '../../../services/formatting.service';\nimport { interval, Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/internal/operators/tap';\n\n@Component({\n    template: ''\n})\nexport abstract class BaseViewComponent implements OnInit, OnDestroy {\n    @Input() options$: Observable<CalendarOptions>;\n    @Input() selectedDate$: Observable<Date>;\n    @Input() events$: Observable<CalendarEvent[]>;\n\n    @Output() eventClick: EventEmitter<CalendarEvent> = new EventEmitter();\n    @Output() changeToDayView: EventEmitter<Date> = new EventEmitter();\n\n    protected subscriptions$: Subscription = new Subscription();\n    public markerPosition = 0;\n\n    options: CalendarOptions;\n    hoursOfDay = hoursOfDay;\n    pixelsPerHour = 0;\n    selectedDate = new Date();\n    events: CalendarEvent[] = [];\n\n    protected constructor(\n        protected formattingService: FormattingService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.subscriptions$.add(\n            this.options$.pipe(\n                tap((options) => {\n                    this.options = options;\n                    this.markerPosition = this.calculateMarkerPosition();\n                    this.pixelsPerHour = this.options.getPixelsPerMinute * 60;\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.selectedDate$.pipe(\n                tap(selectedDate => {\n                    this.selectedDate = selectedDate;\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            interval(60000).pipe(\n                tap(() => {\n                    this.markerPosition = this.calculateMarkerPosition();\n                })\n            ).subscribe()\n        );\n    }\n\n    protected createEventGroups(day: CalendarDay): CalendarDay {\n        day.events.map((event: CalendarEvent) => {\n            const uuid = uuidv4();\n            let eventGroup: CalendarEvent[] = [];\n\n            if (event.grid) {\n                const eventsNotAllDay = day.events.filter(x => !x.allDay);\n                eventGroup = this.getOverlappingEvents(event, eventsNotAllDay, event.grid.eventGroups);\n\n                eventGroup.map((overlapEvent: CalendarEvent) => {\n                    if (overlapEvent.grid) {\n                        overlapEvent.grid.eventGroups.push(uuid);\n                        overlapEvent.grid.eventsInGroup = eventGroup.length;\n                    }\n\n                    if (!day.eventGroups.includes(uuid)) {\n                        day.eventGroups.push(uuid);\n                    }\n                });\n            }\n        });\n\n        this.setEventSizes(day);\n\n        return day;\n    }\n\n    protected populateEvents(event: CalendarEvent, day: CalendarDay): CalendarEvent {\n        const populatedEvent = new CalendarEvent({\n            ...event,\n            grid: this.calculatePixelsOffsetForEvent(event, day)\n        });\n\n        return populatedEvent;\n    }\n\n    private getOverlappingEvents(event: CalendarEvent, events: CalendarEvent[], eventGroups: string[]): CalendarEvent[] {\n        return events.filter((compareEvent: CalendarEvent) => {\n            const eventsDoOverlap = areIntervalsOverlapping(\n                { start: event.startTime, end: event.endTime },\n                { start: compareEvent.startTime, end: compareEvent.endTime },\n                { inclusive: true }\n            );\n\n            let isAlreadyInEventGroup = false;\n            if (compareEvent.grid) {\n                isAlreadyInEventGroup = compareEvent.grid.eventGroups.some((eventGroup: string) => {\n                    return eventGroups.includes(eventGroup);\n                });\n            }\n\n            return eventsDoOverlap && !isAlreadyInEventGroup;\n        });\n    }\n\n    private setEventSizes(day: CalendarDay): void {\n        day.eventGroups.forEach(eventGroup => {\n            const eventGroupEvents = day.events.filter((event: CalendarEvent) => {\n                return event.grid?.eventGroups.includes(eventGroup);\n            });\n\n            let index = 0;\n            eventGroupEvents.forEach((event: CalendarEvent) => {\n                if (event.grid) {\n                    event.grid.width = 100 / (eventGroupEvents.length);\n                    event.grid.offsetLeft = event.grid.width * index;\n                }\n\n                // check if already has a width/offsetLeft to determine if it's in eventgroup A or B\n\n                index++;\n            });\n        });\n    }\n\n    private calculatePixelsOffsetForEvent(event: CalendarEvent, day: CalendarDay): CalendarEventGrid {\n        let grid = new CalendarEventGrid();\n\n        const startTime = event.startTime;\n        const endTime = isSameDay(event.startTime, event.endTime) ?\n            event.endTime :\n            endOfDay(event.startTime);\n\n        const eventDurationFromStartTime = intervalToDuration({\n            start: startTime,\n            end: endTime\n        });\n\n        const eventDurationFromMidnight = intervalToDuration({\n            start: startOfDay(day.date),\n            end: event.endTime\n        });\n\n        eventDurationFromStartTime.hours = eventDurationFromStartTime.hours || 0;\n        eventDurationFromStartTime.minutes = eventDurationFromStartTime.minutes || 0;\n        eventDurationFromMidnight.hours = eventDurationFromMidnight.hours || 0;\n        eventDurationFromMidnight.minutes = eventDurationFromMidnight.minutes || 0;\n\n        const offsetInMinutes = !isSameDay(event.startTime, event.endTime) && isSameDay(event.endTime, day.date) ?\n            0 : Math.abs(getHours(startTime)) * 60 + getMinutes(startTime);\n\n        const durationOffset = !isSameDay(event.startTime, event.endTime) && isSameDay(event.endTime, day.date) ?\n            eventDurationFromMidnight.hours * 60 + eventDurationFromMidnight.minutes :\n            eventDurationFromStartTime.hours * 60 + eventDurationFromStartTime.minutes;\n\n        grid = {\n            ...grid,\n            offsetTop: offsetInMinutes * this.options.getPixelsPerMinute,\n            durationOffset: durationOffset * this.options.getPixelsPerMinute\n        };\n\n        return grid;\n    }\n\n    public getCellHeight(time: any): number {\n        if (time.isEnd) {\n            return 20;\n        }\n\n        return this.pixelsPerHour;\n    }\n\n    protected calculateMarkerPosition(): number {\n        const now = new Date();\n        const offsetTop = (getHours(now) * 60 + getMinutes(now)) * this.options.getPixelsPerMinute;\n\n        return offsetTop;\n    }\n\n    public isToday(date: Date): boolean {\n        return this.formattingService.isToday(date);\n    }\n\n    public getDayName(date: Date): string {\n        return this.formattingService.getDayName(date);\n    }\n\n    public getDayNumber(date: Date): string {\n        return this.formattingService.getDayNumber(date);\n    }\n\n    public getTime(date: Date): string {\n        return this.formattingService.getTime(date);\n    }\n\n    public onEventClick(event: CalendarEvent): void {\n        this.eventClick.emit(event);\n    }\n\n    public navigateToDayView(date: Date): void {\n        this.changeToDayView.emit(date);\n    }\n\n    protected sortByTime(a: CalendarEvent, b: CalendarEvent): number {\n        return a.startTime.getTime() - b.startTime.getTime();\n    }\n\n    protected sortByAllDay(event: CalendarEvent): number {\n        return event.allDay ? -1 : 1;\n    }\n\n    protected isSameDay(date: Date, startTime: Date, endTime: Date): boolean {\n        return isSameDay(new Date(date), new Date(startTime)) || isSameDay(new Date(date), new Date(endTime));\n    }\n\n    ngOnDestroy(): void {\n       this.subscriptions$.unsubscribe();\n    }\n}\n","import { CalendarEvent } from './CalendarEvent';\n\nexport class CalendarDay {\n    date: Date = new Date();\n    eventGroups: string[] = [];\n    events: CalendarEvent[] = [];\n    eventCount: number = 0;\n\n    constructor(init?: Partial<CalendarDay>) {\n        Object.assign(this, init);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseViewComponent } from '../shared/base-view/base-view.component';\nimport { DayView } from '../../models/Calendar';\nimport { CalendarEvent } from '../../models/CalendarEvent';\nimport { FormattingService } from '../../services/formatting.service';\nimport { tap } from 'rxjs/operators';\nimport { CalendarDay } from '../../models/CalendarDay';\n\n@Component({\n    selector: 'day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseViewComponent implements OnInit {\n    dayView = {} as DayView;\n\n    constructor(\n        formattingService: FormattingService\n    ) {\n        super(formattingService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.generateView();\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap(events => {\n                    this.events = events;\n                    this.generateView();\n                })\n            ).subscribe()\n        );\n    }\n\n    generateView(): void {\n        if (this.selectedDate) {\n            const emptyDay = this.generateDays();\n            this.populateDayView(emptyDay);\n        }\n    }\n\n    populateDayView(emptyDay: CalendarDay): void {\n        const populatedDay: CalendarDay = emptyDay;\n\n        const events = this.events.filter((event: CalendarEvent) => {\n            return this.isSameDay(populatedDay.date, event.startTime, event.endTime);\n            }).map((event: CalendarEvent) => {\n                return this.populateEvents(event, populatedDay);\n            }).sort((a: CalendarEvent, b: CalendarEvent) => {\n                return this.sortByTime(a, b);\n            });\n\n        populatedDay.events = events;\n\n        this.dayView = this.createEventGroups(populatedDay);\n    }\n\n    generateDays(): CalendarDay {\n        const date = new Date(this.selectedDate);\n\n        const day: CalendarDay = new CalendarDay({\n            date,\n            eventGroups: [],\n            events: [],\n            eventCount: 0\n        });\n\n        return day;\n    }\n}\n","import { Component, ComponentFactoryResolver, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { CalendarEvent } from '../../../models/CalendarEvent';\n\n@Component({\n    selector: 'event-display',\n    template: `<ng-template #renderTarget></ng-template>`,\n    styleUrls: ['./event-display.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class EventDisplayComponent implements OnInit, OnDestroy {\n    renderComponent: any;\n    @Input() event!: CalendarEvent;\n    @Input() date!: Date;\n    @Input() component!: any;\n\n    @ViewChild('renderTarget', { read: ViewContainerRef, static: true }) renderTarget: any;\n\n    constructor(\n        private resolver: ComponentFactoryResolver\n    ) {}\n\n    ngOnInit(): void {\n        if (this.event && !this.renderComponent) {\n            this.createRenderComponent();\n        }\n    }\n\n    createRenderComponent(): void {\n        const componentFactory = this.resolver.resolveComponentFactory(this.component);\n        this.renderComponent = this.renderTarget.createComponent(componentFactory);\n        this.renderComponent.instance.event = this.event;\n        this.renderComponent.instance.date = this.date;\n    }\n\n    ngOnDestroy(): void {\n        if (this.renderComponent) {\n            this.renderComponent.destroy();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { EventDisplayComponent } from './event-display/event-display.component';\nimport { EventRenderDayComponent } from './event-render/event-render-day/event-render-day.component';\nimport { EventRenderWeekComponent } from './event-render/event-render-week/event-render-week.component';\nimport { EventRenderMonthComponent } from './event-render/event-render-month/event-render-month.component';\n\nconst MaterialModules = [\n    MatIconModule,\n    MatTooltipModule\n];\n\n@NgModule({\n    declarations: [\n        EventDisplayComponent,\n        EventRenderDayComponent,\n        EventRenderWeekComponent,\n        EventRenderMonthComponent\n    ],\n    imports: [\n        BrowserModule,\n        ...MaterialModules\n    ],\n    exports: [\n        EventDisplayComponent,\n        EventRenderDayComponent,\n        EventRenderWeekComponent,\n        EventRenderMonthComponent\n    ],\n    providers: [],\n    bootstrap: []\n})\nexport class SharedComponentsModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'allDayEventPipe'\n})\nexport class AllDayEventPipe implements PipeTransform {\n    transform(items: any[], allDay: boolean): any {\n        if (allDay) {\n            return items.filter(item => item.allDay);\n        }\n\n        return items.filter(item => !item.allDay);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'limitPipe'\n})\nexport class LimitPipe implements PipeTransform {\n    transform(items: any[], limit: number): any {\n        return items.slice(0, limit);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { AllDayEventPipe } from './all-day-event.pipe';\nimport { LimitPipe } from './limit.pipe';\n\n@NgModule({\n    declarations: [\n        LimitPipe,\n        AllDayEventPipe\n    ],\n    imports: [],\n    exports: [\n        LimitPipe,\n        AllDayEventPipe\n    ],\n    providers: [],\n    bootstrap: []\n})\nexport class PipesModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DayViewComponent } from './day-view.component';\nimport { SharedComponentsModule } from '../shared/shared-components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        DayViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        SharedComponentsModule,\n        PipesModule\n    ],\n    exports: [\n        DayViewComponent\n    ],\n    entryComponents: [],\n    providers: [],\n    bootstrap: []\n})\nexport class DayViewModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { add, startOfWeek } from 'date-fns';\nimport { BaseViewComponent } from '../shared/base-view/base-view.component';\nimport { WeekView } from '../../models/Calendar';\nimport { CalendarEvent } from '../../models/CalendarEvent';\nimport { FormattingService } from '../../services/formatting.service';\nimport { tap } from 'rxjs/operators';\nimport { CalendarDay } from '../../models/CalendarDay';\n\n@Component({\n    selector: 'week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss']\n})\nexport class WeekViewComponent extends BaseViewComponent implements OnInit {\n    weekView = {} as WeekView;\n\n    constructor(\n        formattingService: FormattingService\n    ) {\n        super(formattingService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.generateView();\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap(events => {\n                    this.events = events;\n                    this.generateView();\n                })\n            ).subscribe()\n        );\n    }\n\n    generateView(): void {\n        if (this.selectedDate) {\n            const emptyDays = this.generateDays();\n            this.populateWeekView(emptyDays);\n        }\n    }\n\n    populateWeekView(emptyDays: CalendarDay[]): void {\n        const populatedDays: CalendarDay[] = emptyDays;\n\n        populatedDays.forEach(day => {\n            day.events = this.events.filter((event: CalendarEvent) => {\n                return this.isSameDay(day.date, event.startTime, event.endTime);\n            }).map((event: CalendarEvent) => {\n                return this.populateEvents(event, day);\n            }).sort((a: CalendarEvent, b: CalendarEvent) => {\n                return this.sortByTime(a, b);\n            });\n\n            day = this.createEventGroups(day);\n        });\n\n        this.weekView.days = populatedDays;\n    }\n\n    generateDays(): CalendarDay[] {\n        const selectedWeekStart = startOfWeek(this.selectedDate, { weekStartsOn: 1 });\n        const days = [];\n\n        for (let i = 0; i < 7; i++) {\n            let date = new Date(selectedWeekStart);\n            date = add(date, { days: i });\n\n            const day = new CalendarDay({\n                date,\n                eventGroups: [],\n                events: []\n            });\n\n            days.push(day);\n        }\n\n        return days;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { WeekViewComponent } from './week-view.component';\nimport { SharedComponentsModule } from '../shared/shared-components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        WeekViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        SharedComponentsModule,\n        PipesModule\n    ],\n    exports: [\n        WeekViewComponent\n    ],\n    entryComponents: [],\n    providers: [],\n    bootstrap: []\n})\nexport class WeekViewModule { }\n","import {\n    Component, ElementRef, EventEmitter,\n    HostListener, OnDestroy, OnInit, Output, QueryList, ViewChild, ViewChildren\n} from '@angular/core';\nimport { add, eachWeekOfInterval, endOfMonth, getWeek, isSameMonth, startOfMonth, sub } from 'date-fns';\nimport { fromEvent, interval, Subject } from 'rxjs';\nimport { takeUntil, tap, throttle } from 'rxjs/operators';\nimport { MonthView } from '../../models/Calendar';\nimport { CalendarDay } from '../../models/CalendarDay';\nimport { CalendarEvent } from '../../models/CalendarEvent';\nimport { NEXT, PREVIOUS } from '../../models/Directions';\nimport { daysOfWeek } from '../../models/Times';\nimport { FormattingService } from '../../services/formatting.service';\nimport { BaseViewComponent } from '../shared/base-view/base-view.component';\n\n@Component({\n    selector: 'month-view',\n    templateUrl: './month-view.component.html',\n    styleUrls: ['./month-view.component.scss']\n})\nexport class MonthViewComponent extends BaseViewComponent implements OnInit, OnDestroy {\n    @Output() setCalendarOffset: EventEmitter<string> = new EventEmitter();\n\n    monthView = {} as MonthView;\n    daysOfWeek = daysOfWeek;\n    dayBlockHeight = 0;\n    weekNumbers: number[] = [];\n    showHiddenEvents = false;\n    hiddenEventsTriggerOrigin: any;\n    hiddenEventsDay: CalendarDay;\n    maxEventsVisible = 0;\n    observer: MutationObserver;\n\n    scrollListener = new Subject();\n    scrollListener$ = this.scrollListener.asObservable();\n\n    @ViewChild('calendarDayElement', {read: ElementRef, static: true}) calendarDayElement: ElementRef;\n    @HostListener('window:resize', ['$event']) onResize(): void {\n        this.calculateMaxEventsPerDay();\n    }\n\n    constructor(\n        formattingService: FormattingService\n    ) {\n        super(formattingService);\n\n        fromEvent(window, 'wheel')\n            .pipe(\n                takeUntil(this.scrollListener$),\n                throttle(e => interval(1000))\n            )\n            .subscribe((e: any) => this.handleScroll(e));\n\n        this.hiddenEventsDay = new CalendarDay();\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.generateView();\n        this.listenToCalendarViewportChanges();\n\n        this.subscriptions$.add(\n            this.events$.pipe(\n                tap(events => {\n                    this.events = events;\n                    this.generateView();\n                })\n            ).subscribe()\n        );\n\n        this.subscriptions$.add(\n            this.selectedDate$.pipe(\n                tap(() => {\n                    this.closeHiddenEvents();\n                })\n            ).subscribe()\n        );\n    }\n\n    listenToCalendarViewportChanges(): void {\n        this.observer = new MutationObserver( list => {\n            this.calculateMaxEventsPerDay();\n        });\n\n        this.observer.observe(this.calendarDayElement.nativeElement, { childList: true });\n    }\n\n    generateView(): void {\n        if (this.selectedDate) {\n            const emptyDays = this.generateDays();\n            this.populateMonthView(emptyDays);\n            this.getWeekNumbers();\n\n            this.calculateMaxEventsPerDay();\n        }\n    }\n\n    getWeekNumbers(): void {\n        const weeksOfMonth = eachWeekOfInterval({\n            start: startOfMonth(this.selectedDate),\n            end: endOfMonth(this.selectedDate)\n        });\n\n        this.weekNumbers = [];\n        weeksOfMonth.forEach(week => {\n            this.weekNumbers.push(getWeek(week, { weekStartsOn: 1 }));\n        });\n    }\n\n    populateMonthView(emptyDays: CalendarDay[]): void {\n        const populatedDays: CalendarDay[] = emptyDays;\n\n        populatedDays.forEach(day => {\n            day.events = this.events.filter((event: CalendarEvent) => {\n                return this.isSameDay(day.date, event.startTime, event.endTime);\n            }).map((event: CalendarEvent) => {\n                return this.populateEvents(event, day);\n            }).sort((a: CalendarEvent, b: CalendarEvent) => {\n                return this.sortByTime(a, b);\n            }).sort(event => {\n                return this.sortByAllDay(event);\n            });\n\n            day = this.createEventGroups(day);\n            day.eventCount = day.events.length;\n        });\n\n        this.monthView.days = populatedDays;\n    }\n\n    generateDays(): CalendarDay[] {\n        const dayOfWeek = add(startOfMonth(this.selectedDate), { days: 7 }).getDay();\n        const selectedMonthStart = sub(startOfMonth(this.selectedDate), { days: dayOfWeek - 1 });\n        const days = [];\n\n        for (let i = 0; i < 35; i++) {\n            let date = new Date(selectedMonthStart);\n            date = add(date, { days: i });\n\n            const day: CalendarDay = {\n                date,\n                eventGroups: [],\n                events: [],\n                eventCount: 0\n            };\n\n            days.push(day);\n        }\n\n        return days;\n    }\n\n    isCurrentMonth(date: Date): boolean {\n        return isSameMonth(date, this.selectedDate);\n    }\n\n    handleScroll(e: WheelEvent): void {\n        e.deltaY > 0 ? this.setCalendarOffset.emit(NEXT) : this.setCalendarOffset.emit(PREVIOUS);\n    }\n\n    toggleHiddenEvents(hiddenEventsTriggerOrigin: any, day: CalendarDay): void {\n        this.hiddenEventsTriggerOrigin = hiddenEventsTriggerOrigin;\n        this.hiddenEventsDay = day;\n        this.showHiddenEvents = !this.showHiddenEvents;\n    }\n\n    closeHiddenEvents(): void {\n        this.showHiddenEvents = false;\n    }\n\n    getHiddenEventsHeight(): number {\n        return (this.hiddenEventsDay.eventCount * 30) + 85;\n    }\n\n    calculateMaxEventsPerDay(): void {\n        const dayBlockHeight = this.calendarDayElement.nativeElement.children[0]?.getBoundingClientRect().height;\n        this.maxEventsVisible = Math.floor((dayBlockHeight - 25) / 30);\n    }\n\n    ngOnDestroy(): void {\n        this.scrollListener.next();\n        this.observer.disconnect();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SharedComponentsModule } from '../shared/shared-components.module';\nimport { MonthViewComponent } from './month-view.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        MonthViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        SharedComponentsModule,\n        OverlayModule,\n        PipesModule\n    ],\n    exports: [\n        MonthViewComponent\n    ],\n    entryComponents: [],\n    providers: [],\n    bootstrap: []\n})\nexport class MonthViewModule { }\n","import { Injectable } from '@angular/core';\nimport { NativeDateAdapter } from '@angular/material/core';\n\n@Injectable()\nexport class LocaleDateAdapter extends NativeDateAdapter {\n    getFirstDayOfWeek(): number {\n        return 1;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMatCalendarComponent } from './ngx-mat-calendar.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DateAdapter, MatNativeDateModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { DayViewModule } from './components/day-view/day-view.module';\nimport { WeekViewModule } from './components/week-view/week-view.module';\nimport { MonthViewModule } from './components/month-view/month-view.module';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { LocaleDateAdapter } from './other/DateAdapter';\nimport { FormattingService } from './services/formatting.service';\nimport { KeyboardShortcutDialogComponent } from './components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\n\nconst MaterialModules = [\n    MatCardModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatDividerModule\n];\n\nconst ViewModules = [\n    DayViewModule,\n    WeekViewModule,\n    MonthViewModule\n];\n\n@NgModule({\n    declarations: [\n        NgxMatCalendarComponent,\n        KeyboardShortcutDialogComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ...ViewModules,\n        ...MaterialModules\n    ],\n    exports: [\n        NgxMatCalendarComponent,\n        KeyboardShortcutDialogComponent\n    ],\n    providers: [\n        FormattingService,\n        {\n            provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS,\n            useValue: {\n                useUtc: true\n            }\n        }, {\n            provide: DateAdapter,\n            useClass: LocaleDateAdapter\n        }\n    ],\n    bootstrap: []\n})\nexport class NgxMatCalendarModule { }\n","/*\n * Public API Surface of ngx-mat-calendar\n */\n\nexport * from './lib/ngx-mat-calendar.component';\nexport * from './lib/ngx-mat-calendar.module';\nexport * from './lib/components/dialogs/keyboard-shortcut-dialog/keyboard-shortcut-dialog.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DayViewComponent as ɵc} from './lib/components/day-view/day-view.component';\nexport {DayViewModule as ɵb} from './lib/components/day-view/day-view.module';\nexport {MonthViewComponent as ɵq} from './lib/components/month-view/month-view.component';\nexport {MonthViewModule as ɵp} from './lib/components/month-view/month-view.module';\nexport {BaseViewComponent as ɵd} from './lib/components/shared/base-view/base-view.component';\nexport {EventDisplayComponent as ɵg} from './lib/components/shared/event-display/event-display.component';\nexport {EventRenderDayComponent as ɵh} from './lib/components/shared/event-render/event-render-day/event-render-day.component';\nexport {EventRenderMonthComponent as ɵj} from './lib/components/shared/event-render/event-render-month/event-render-month.component';\nexport {EventRenderWeekComponent as ɵi} from './lib/components/shared/event-render/event-render-week/event-render-week.component';\nexport {SharedComponentsModule as ɵf} from './lib/components/shared/shared-components.module';\nexport {WeekViewComponent as ɵo} from './lib/components/week-view/week-view.component';\nexport {WeekViewModule as ɵn} from './lib/components/week-view/week-view.module';\nexport {CalendarOptions as ɵa} from './lib/models/CalendarOptions';\nexport {LocaleDateAdapter as ɵr} from './lib/other/DateAdapter';\nexport {AllDayEventPipe as ɵm} from './lib/pipes/all-day-event.pipe';\nexport {LimitPipe as ɵl} from './lib/pipes/limit.pipe';\nexport {PipesModule as ɵk} from './lib/pipes/pipes.module';\nexport {FormattingService as ɵe} from './lib/services/formatting.service';"],"names":["tap","uuidv4","MaterialModules"],"mappings":"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"}